{"version":3,"sources":["components/navbar.jsx","components/game.jsx","components/gamelist.jsx","components/tableHeader.jsx","components/tableFooter.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","state","resetPopupOpen","handleItemClick","_","data","name","_this","setState","props","onReset","handleOpen","handleClose","react_default","a","createElement","Menu","secondary","Item","src","alt","content","onClick","this","Popup","hideOnScroll","open","onClose","onOpen","trigger","position","Icon","color","Button","on","Component","Game","idx","onChange","_this2","Table","Row","style","borderTop","undefined","Cell","game","soloWon","soloLost","concat","points","GameList","winner","length","ResultPoints","0","1","2","3","Object","keys","forEach","w","includes","Number","gameList","pointList","gameIDX","gameToResultPoints","push","gameID","PointList","gameListToPointList","games","Body","map","components_game","key","id","TableHeader","handleChange","event","players","toConsumableArray","target","value","nameStyle","textAlign","fontWeight","Header","HeaderCell","Form","Input","transparent","type","placeholder","TableFooter","handleWinnerInput","newGame","playerid","checked","handlePointInput","handlePointSubmit","nullGame","winnerList","element","console","warn","onSubmit","Footer","fullWidth","Checkbox","fluid","size","max","min","action","icon","emptyState","App","ls","get","handlePlayerChange","newPlayers","set","handleGameAdded","resetNewGame","handleNewGameChange","newGameState","newIDX","handleReset","handleGameChange","gameid","winnerIDX","Fragment","navbar","selectable","unstackable","columns","striped","borderCollapse","tableHeader","gamelist","tableFooter","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8TA+CeA,6MA3CbC,MAAQ,CAAEC,gBAAgB,KAE1BC,gBAAkB,SAACC,EAAGC,GACF,UAAdA,EAAKC,OACPC,EAAKC,SAAS,CAAEN,gBAAgB,IAChCK,EAAKE,MAAMC,cAIfC,WAAa,WACXJ,EAAKC,SAAS,CAAEN,gBAAgB,OAGlCU,YAAc,WACZL,EAAKC,SAAS,CAAEN,gBAAgB,6EAIhC,OACEW,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,WAAS,GACbJ,EAAAC,EAAAC,cAACC,EAAA,EAAKE,KAAN,CAAWZ,KAAK,QACdO,EAAAC,EAAAC,cAAA,OAAKI,IAAI,yCAAyCC,IAAI,UAExDP,EAAAC,EAAAC,cAACC,EAAA,EAAKE,KAAN,CAAWZ,KAAK,UAAUe,QAAQ,OAAOC,QAASC,KAAKpB,kBACvDU,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACElB,KAAK,aACLmB,cAAY,EACZC,KAAMH,KAAKtB,MAAMC,eACjByB,QAASJ,KAAKX,YACdgB,OAAQL,KAAKZ,WACbkB,QACEhB,EAAAC,EAAAC,cAACC,EAAA,EAAKE,KAAN,CAAWY,SAAS,SACpBjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMzB,KAAK,SAAS0B,MAAM,WAD1B,UAIFX,QAASR,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAQD,MAAM,MAAM1B,KAAK,QAAQe,QAAQ,gBAAgBC,QAASC,KAAKpB,kBAChF+B,GAAG,kBArCQC,sBCmCNC,6MAlCbjC,gBAAkB,SAACkC,GACjB9B,EAAKE,MAAM6B,SAASD,4EAGb,IAAAE,EAAAhB,KACP,OACEV,EAAAC,EAAAC,cAACyB,EAAA,EAAMC,IAAP,CAAWC,MAAO,CAAEC,UAAWpB,KAAKd,MAAM4B,IAAI,IAAM,OAAIO,EAAY,mBAClE/B,EAAAC,EAAAC,cAACyB,EAAA,EAAMK,KAAP,KAAatB,KAAKd,MAAMqC,KAAK,IAC7BjC,EAAAC,EAAAC,cAACyB,EAAA,EAAMK,KAAP,KAAatB,KAAKd,MAAMqC,KAAK,IAC7BjC,EAAAC,EAAAC,cAACyB,EAAA,EAAMK,KAAP,KAAatB,KAAKd,MAAMqC,KAAK,IAC7BjC,EAAAC,EAAAC,cAACyB,EAAA,EAAMK,KAAP,KAAatB,KAAKd,MAAMqC,KAAK,IAE7BjC,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACEC,cAAY,EACZI,QACEhB,EAAAC,EAAAC,cAACyB,EAAA,EAAMK,KAAP,KACEtB,KAAKd,MAAMqC,KAAKC,SAAWxB,KAAKd,MAAMqC,KAAKE,SAA5C,GAAAC,OAA2D,EAAI1B,KAAKd,MAAMqC,KAAKI,OAA/E,OAAAD,OAA2F1B,KAAKd,MAAMqC,KAAKI,QAAW3B,KAAKd,MAAMqC,KAAKI,QAGzI7B,QACER,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CACEzB,KAAK,eACL+B,IAAKd,KAAKd,MAAM4B,IAChBf,QAAS,kBAAMiB,EAAKpC,gBAAgBoC,EAAK9B,MAAM4B,QAGnDH,GAAG,QACHJ,SAAS,uBA5BAK,aCiEJgB,6LA/DML,GACjB,IAAMC,EAAiC,IAAvBD,EAAKM,OAAOC,OACtBL,EAAkC,IAAvBF,EAAKM,OAAOC,OAEvBC,EAAe,CAACC,EAAE,EAAGC,EAAE,EAAGC,EAAE,EAAGC,EAAE,GAmBvC,OAlBAC,OAAOC,KAAKN,GAAcO,QAAQ,SAAAC,GAC5BhB,EAAKM,OAAOW,SAASC,OAAOF,IAE5BR,EAAaQ,IADXf,EACiB,EAAID,EAAKI,OAEVJ,EAAKI,OAIvBI,EAAaQ,IADXd,EACiB,EAAIF,EAAKI,OAETJ,EAAKI,SAI9BI,EAAaP,QAAUA,EACvBO,EAAaN,SAAWA,EAEjBM,8CAGWW,GAAU,IAAA1D,EAAAgB,KACtB2C,EAAY,GAclB,OAbAD,EAASJ,QAAQ,SAACf,EAAMqB,GACtB,IAAMb,EAAe/C,EAAK6D,mBAAmBtB,GAC7CoB,EAAUG,KAAK,CACbC,OAAQxB,EAAKwB,OACbpB,OAAQJ,EAAKI,OACbH,QAASO,EAAaP,QACtBC,SAAUM,EAAaN,SACvBO,EAAe,IAAZY,EAAgBb,EAAa,GAAKA,EAAa,GAAKY,EAAUA,EAAUb,OAAO,GAAG,GACrFG,EAAe,IAAZW,EAAgBb,EAAa,GAAKA,EAAa,GAAKY,EAAUA,EAAUb,OAAO,GAAG,GACrFI,EAAe,IAAZU,EAAgBb,EAAa,GAAKA,EAAa,GAAKY,EAAUA,EAAUb,OAAO,GAAG,GACrFK,EAAe,IAAZS,EAAgBb,EAAa,GAAKA,EAAa,GAAKY,EAAUA,EAAUb,OAAO,GAAG,OAGlFa,mCAGA,IAAA3B,EAAAhB,KACDgD,EAAYhD,KAAKiD,oBAAoBjD,KAAKd,MAAMgE,OAEtD,OACE5D,EAAAC,EAAAC,cAACyB,EAAA,EAAMkC,KAAP,KACGH,EAAUI,IAAI,SAAC7B,EAAMqB,GAAP,OACbtD,EAAAC,EAAAC,cAAC6D,EAAD,CACAC,IAAKV,EACL9B,IAAK8B,EACLW,GAAIhC,EAAKwB,OACTxB,KAAMA,EACNR,SAAUC,EAAK9B,MAAM6B,qBAxDRH,+BCkDR4C,6MAlDbC,aAAe,SAACC,GACd,IAAMC,EAAOvB,OAAAwB,EAAA,EAAAxB,CAAOpD,EAAKE,MAAMyE,SAC/BA,EAAQD,EAAMG,OAAON,IAAIxE,KAAO2E,EAAMG,OAAOC,MAC7C9E,EAAKE,MAAM6B,SAAS4C,4EAIpB,IAAMI,EAAY,CAChBC,UAAW,SACXC,WAAY,QAGd,OACE3E,EAAAC,EAAAC,cAACyB,EAAA,EAAMiD,OAAP,KACE5E,EAAAC,EAAAC,cAACyB,EAAA,EAAMC,IAAP,KACA5B,EAAAC,EAAAC,cAACyB,EAAA,EAAMkD,WAAP,KACE7E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,KACE9E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAOC,aAAW,EAACC,KAAK,OAAOC,YAAY,WAAWjB,GAAI,EAAGO,MAAO9D,KAAKd,MAAMyE,QAAQ,GAAG5E,KAAMgC,SAAUf,KAAKyD,cAC7GnE,EAAAC,EAAAC,cAAA,SAAO2B,MAAO4C,OAIpBzE,EAAAC,EAAAC,cAACyB,EAAA,EAAMkD,WAAP,KACE7E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,KACE9E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAOC,aAAW,EAACC,KAAK,OAAOC,YAAY,WAAWjB,GAAI,EAAGO,MAAO9D,KAAKd,MAAMyE,QAAQ,GAAG5E,KAAMgC,SAAUf,KAAKyD,cAC7GnE,EAAAC,EAAAC,cAAA,SAAO2B,MAAO4C,OAIpBzE,EAAAC,EAAAC,cAACyB,EAAA,EAAMkD,WAAP,KACE7E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,KACE9E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAOC,aAAW,EAACC,KAAK,OAAOC,YAAY,WAAWjB,GAAI,EAAGO,MAAO9D,KAAKd,MAAMyE,QAAQ,GAAG5E,KAAMgC,SAAUf,KAAKyD,cAC7GnE,EAAAC,EAAAC,cAAA,SAAO2B,MAAO4C,OAIpBzE,EAAAC,EAAAC,cAACyB,EAAA,EAAMkD,WAAP,KACE7E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,KACE9E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAOC,aAAW,EAACC,KAAK,OAAOC,YAAY,WAAWjB,GAAI,EAAGO,MAAO9D,KAAKd,MAAMyE,QAAQ,GAAG5E,KAAMgC,SAAUf,KAAKyD,cAC7GnE,EAAAC,EAAAC,cAAA,SAAO2B,MAAO4C,OAIpBzE,EAAAC,EAAAC,cAACyB,EAAA,EAAMkD,WAAP,KAAmB,iBA5CDvD,sBCoFX6D,6MAnFbC,kBAAoB,SAAC7F,EAAGC,GACtB,IAAM+C,EAAMO,OAAAwB,EAAA,EAAAxB,CAAOpD,EAAKE,MAAMyF,QAAQ9C,QACtCA,EAAO/C,EAAK8F,UAAY9F,EAAK+F,QAC7B7F,EAAKE,MAAM6B,SAAS,CAACc,OAAOA,OAG9BiD,iBAAmB,SAACjG,EAAGC,GACrBE,EAAKE,MAAM6B,SAAS,CAACY,OAAO7C,EAAKgF,WAGnCiB,kBAAmB,SAAClG,EAAGC,GACrB,IAAM6C,EAASc,OAAOzD,EAAKE,MAAMyF,QAAQhD,QACrCqD,EAAsB,IAAXrD,EACXsD,EAAa,GAEjBjG,EAAKE,MAAMyF,QAAQ9C,OAAOS,QAAQ,SAAC4C,EAASpE,GACtCoE,GACFD,EAAWnC,KAAKhC,KAIhBkE,GAAkC,IAAtBC,EAAWnD,OACzBqD,QAAQC,KAAK,qCACkB,IAAtBH,EAAWnD,QAAiBkD,EAE5BC,EAAWnD,OAAS,EAC7BqD,QAAQC,KAAK,mCAEbpG,EAAKE,MAAMmG,SAAS,CAClBvE,IAAK9B,EAAKE,MAAMyF,QAAQ7D,IACxBe,OAAQoD,EACRtD,OAAQA,IAPVwD,QAAQC,KAAK,2GAaf,OACE9F,EAAAC,EAAAC,cAACyB,EAAA,EAAMqE,OAAP,CAAcC,WAAS,GACvBjG,EAAAC,EAAAC,cAACyB,EAAA,EAAMC,IAAP,KACE5B,EAAAC,EAAAC,cAACyB,EAAA,EAAMkD,WAAP,KACE7E,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CACEZ,SAAS,IACTC,QAAS7E,KAAKd,MAAMyF,QAAQ9C,OAAO,GACnCd,SAAUf,KAAK0E,qBAGnBpF,EAAAC,EAAAC,cAACyB,EAAA,EAAMkD,WAAP,KACA7E,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CACIZ,SAAS,IACTC,QAAS7E,KAAKd,MAAMyF,QAAQ9C,OAAO,GACnCd,SAAUf,KAAK0E,qBAGnBpF,EAAAC,EAAAC,cAACyB,EAAA,EAAMkD,WAAP,KAAkB7E,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CACdZ,SAAS,IACTC,QAAS7E,KAAKd,MAAMyF,QAAQ9C,OAAO,GACnCd,SAAUf,KAAK0E,qBAGnBpF,EAAAC,EAAAC,cAACyB,EAAA,EAAMkD,WAAP,KAAkB7E,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CACdZ,SAAS,IACTC,QAAS7E,KAAKd,MAAMyF,QAAQ9C,OAAO,GACnCd,SAAUf,KAAK0E,qBAGnBpF,EAAAC,EAAAC,cAACyB,EAAA,EAAMkD,WAAP,KACA7E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAOoB,OAAK,EACVC,KAAK,QACLnB,KAAK,SACLoB,IAAK,GACLC,IAAK,EACLC,OAASvG,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAQD,MAAM,OAAOqF,KAAK,MAAM/F,QAAUC,KAAK+E,oBACxDhE,SAAUf,KAAK8E,iBACfhB,MAAO9D,KAAKd,MAAMyF,QAAQhD,OAC1B6C,YAAY,qBA5EI5D,8BCM1B,SAASmF,IACP,MAAO,CACLpC,QAAS,CACP,CAACJ,GAAG,EAAGxE,KAAK,YACZ,CAACwE,GAAG,EAAGxE,KAAK,YACZ,CAACwE,GAAG,EAAGxE,KAAK,YACZ,CAACwE,GAAG,EAAGxE,KAAK,aAEdmE,MAAO,GACPyB,QAAS,CACP7D,IAAI,EACJe,OAAQ,EAAC,GAAO,GAAO,GAAO,GAC9BF,OAAQ,SA8FGqE,6MAxFftH,MAAQ,CACNiF,QAASsC,IAAGC,IAAI,YAjBP,CACP,CAAC3C,GAAG,EAAGxE,KAAK,YACZ,CAACwE,GAAG,EAAGxE,KAAK,YACZ,CAACwE,GAAG,EAAGxE,KAAK,YACZ,CAACwE,GAAG,EAAGxE,KAAK,aAcdmE,MAAO+C,IAAGC,IAAI,UAZP,GAaPvB,QAASsB,IAAGC,IAAI,YAZP,CACPpF,IAAI,EACJe,OAAQ,EAAC,GAAO,GAAO,GAAO,GAC9BF,OAAQ,OAWZoE,WAAaA,IAEbI,mBAAqB,SAACC,GACpBpH,EAAKC,SAAS,CAAC0E,QAAQyC,IACvBH,IAAGI,IAAI,UAAWD,MAGpBE,gBAAkB,SAAC3B,GACjB,IAAMzB,EAAKd,OAAAwB,EAAA,EAAAxB,CAAQpD,EAAKN,MAAMwE,OAC1ByB,EAAQ7D,IAAM9B,EAAKN,MAAMwE,MAAMpB,OAAS,EAC1CoB,EAAMJ,KAAK,CACTC,OAAQ/D,EAAKN,MAAMwE,MAAMpB,OACzBD,OAAQ8C,EAAQ9C,OAChBF,OAAQgD,EAAQhD,SAGlBuB,EAAMyB,EAAQ7D,KAAO,CACnBiC,OAAQ4B,EAAQ7D,IAChBe,OAAQ8C,EAAQ9C,OAChBF,OAAQgD,EAAQhD,QAGpB3C,EAAKC,SAAS,CAACiE,MAAMA,IACrB+C,IAAGI,IAAI,QAASnD,GAEhBlE,EAAKuH,aAAarD,EAAMpB,WAG1B0E,oBAAsB,SAAC7B,GACrB,IAAM8B,EAAezH,EAAKN,MAAMiG,aACTtD,IAAnBsD,EAAQ9C,OACV4E,EAAa5E,OAAS8C,EAAQ9C,YACFR,IAAnBsD,EAAQhD,SACjB8E,EAAa9E,OAASgD,EAAQhD,QAEhC3C,EAAKC,SAAS,CAAC0F,QAAQ8B,IACvBR,IAAGI,IAAI,UAAWI,MAGpBF,aAAe,SAACG,GACd,IAAMX,EAAa/G,EAAK+G,aACxBA,EAAWpB,QAAQ7D,IAAM4F,EACzB1H,EAAKC,SAAS,CAAC0F,QAAQoB,EAAWpB,UAClCsB,IAAGI,IAAI,UAAWN,EAAWpB,YAG/BgC,YAAc,WACZ,IAAMZ,EAAa/G,EAAK+G,aACxB/G,EAAKC,SAAS8G,GACdE,IAAGI,IAAI,UAAWN,EAAWpC,SAC7BsC,IAAGI,IAAI,QAASN,EAAW7C,OAC3B+C,IAAGI,IAAI,UAAWN,EAAWpB,YAG/BiC,iBAAmB,SAACC,GAClB,IAAMtF,EAAOvC,EAAKN,MAAMwE,MAAM2D,GACxBlC,EAAU,CACd7D,IAAK+F,EACLhF,OAAQ,EAAC,GAAO,GAAO,GAAO,GAC9BF,OAAQJ,EAAKI,QAGfJ,EAAKM,OAAOS,QAAQ,SAAAwE,GAClBnC,EAAQ9C,OAAOiF,IAAa,IAG9B9H,EAAKC,SAAS,CAAC0F,QAAQA,6EAIvB,OACErF,EAAAC,EAAAC,cAACF,EAAAC,EAAMwH,SAAP,KACAzH,EAAAC,EAAAC,cAACwH,EAAD,CAAQ7H,QAASa,KAAK2G,cACtBrH,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAOgG,YAAU,EAACC,aAAW,EAACC,QAAS,EAAGC,SAAO,EAACpD,UAAU,SAAS7C,MAAO,CAACkG,eAAgB,aAC3F/H,EAAAC,EAAAC,cAAC8H,EAAD,CAAa3D,QAAS3D,KAAKtB,MAAMiF,QAAS5C,SAAUf,KAAKmG,qBACzD7G,EAAAC,EAAAC,cAAC+H,EAAD,CAAUrE,MAAOlD,KAAKtB,MAAMwE,MAAOnC,SAAUf,KAAK4G,mBAClDtH,EAAAC,EAAAC,cAACgI,EAAD,CAAa7C,QAAS3E,KAAKtB,MAAMiG,QAAS5D,SAAUf,KAAKwG,oBAAqBnB,SAAUrF,KAAKsG,2BAlFnF1F,aCdE6G,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,kECXNC,IAASC,OAAOzI,EAAAC,EAAAC,cAACwI,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a655ac96.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Menu, Icon, Popup, Button } from 'semantic-ui-react'\n\nclass NavBar extends Component {\n  state = { resetPopupOpen: false }\n\n  handleItemClick = (_, data) => {\n    if (data.name === \"reset\") {\n      this.setState({ resetPopupOpen: false })\n      this.props.onReset()\n    }\n  };\n\n  handleOpen = () => {\n    this.setState({ resetPopupOpen: true })\n  }\n\n  handleClose = () => {\n    this.setState({ resetPopupOpen: false })\n  }\n\n  render() { \n    return (\n      <Menu secondary>\n        <Menu.Item name='icon'>\n          <img src='https://react.semantic-ui.com/logo.png' alt='logo'/>\n        </Menu.Item>\n        <Menu.Item name='reviews' content='Help' onClick={this.handleItemClick}/>\n        <Popup\n          name='resetPopup'\n          hideOnScroll\n          open={this.state.resetPopupOpen}\n          onClose={this.handleClose}\n          onOpen={this.handleOpen}\n          trigger={\n            <Menu.Item position='right'>\n            <Icon name='delete' color='orange'/> Reset\n          </Menu.Item>\n        }\n          content={<Button color='red' name='reset' content='Confirm reset' onClick={this.handleItemClick}/>}\n          on='click'\n        />\n      </Menu>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport { Table, Icon, Popup} from 'semantic-ui-react'\n\nclass Game extends Component {\n  handleItemClick = (idx) => {\n    this.props.onChange(idx);\n  }\n\n  render() { \n    return (\n      <Table.Row style={{ borderTop: this.props.idx%4 !== 0 ? undefined : \"solid 2px gray\"}}>\n        <Table.Cell>{this.props.game[0]}</Table.Cell>\n        <Table.Cell>{this.props.game[1]}</Table.Cell>\n        <Table.Cell>{this.props.game[2]}</Table.Cell>\n        <Table.Cell>{this.props.game[3]}</Table.Cell>\n\n        <Popup\n          hideOnScroll\n          trigger={\n            <Table.Cell>\n            {(this.props.game.soloWon || this.props.game.soloLost) ? `${3 * this.props.game.points} / ${this.props.game.points}` : this.props.game.points}\n            </Table.Cell>\n            }\n          content={\n            <Icon\n              name='edit outline'\n              idx={this.props.idx}\n              onClick={() => this.handleItemClick(this.props.idx)}\n            />\n          }\n          on='click'\n          position='top center'\n        />\n      </Table.Row>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from 'react';\nimport Game from './game';\nimport { Table } from 'semantic-ui-react'\n\nclass GameList extends Component {\n  gameToResultPoints(game) {\n    const soloWon = game.winner.length === 1;\n    const soloLost = game.winner.length === 3;\n\n    const ResultPoints = {0:0, 1:0, 2:0, 3:0};\n    Object.keys(ResultPoints).forEach(w => {\n      if (game.winner.includes(Number(w))) {\n        if (soloWon) {\n          ResultPoints[w] += 3 * game.points;\n        } else {\n          ResultPoints[w] +=game.points;\n        } \n      } else {\n        if (soloLost) {\n          ResultPoints[w] -= 3 * game.points;\n        } else {\n          ResultPoints[w] -= game.points;\n        }\n      }\n    });\n    ResultPoints.soloWon = soloWon;\n    ResultPoints.soloLost = soloLost;\n\n    return ResultPoints;\n  }\n\n  gameListToPointList(gameList) {\n    const pointList = [];\n    gameList.forEach((game, gameIDX) => {\n      const ResultPoints = this.gameToResultPoints(game);\n      pointList.push({\n        gameID: game.gameID,\n        points: game.points,\n        soloWon: ResultPoints.soloWon,\n        soloLost: ResultPoints.soloLost,\n        0: gameIDX === 0 ? ResultPoints[0] : ResultPoints[0] + pointList[pointList.length-1][0],\n        1: gameIDX === 0 ? ResultPoints[1] : ResultPoints[1] + pointList[pointList.length-1][1],\n        2: gameIDX === 0 ? ResultPoints[2] : ResultPoints[2] + pointList[pointList.length-1][2],\n        3: gameIDX === 0 ? ResultPoints[3] : ResultPoints[3] + pointList[pointList.length-1][3],\n      })\n    });\n    return pointList;\n  }\n\n  render() {\n    const PointList = this.gameListToPointList(this.props.games);\n\n    return (\n      <Table.Body>\n        {PointList.map((game, gameIDX) => (\n          <Game\n          key={gameIDX}\n          idx={gameIDX}\n          id={game.gameID}\n          game={game}\n          onChange={this.props.onChange}\n          />\n        ))}\n      </Table.Body>\n    )\n  }\n}\n\nexport default GameList;\n","import React, { Component } from 'react';\nimport { Table, Form, Input } from 'semantic-ui-react'\n\nclass TableHeader extends Component {\n  handleChange = (event) => {\n    const players = [...this.props.players];\n    players[event.target.id].name = event.target.value;\n    this.props.onChange(players);\n  }\n\n  render() { \n    const nameStyle = {\n      textAlign: \"center\",\n      fontWeight: \"bold\"\n    };\n\n    return ( \n      <Table.Header>\n        <Table.Row>\n        <Table.HeaderCell>\n          <Form>\n            <Input transparent type=\"text\" placeholder=\"Player 1\" id={0} value={this.props.players[0].name} onChange={this.handleChange}>\n              <input style={nameStyle} />\n            </Input>\n          </Form>\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n          <Form>\n            <Input transparent type=\"text\" placeholder=\"Player 2\" id={1} value={this.props.players[1].name} onChange={this.handleChange}>\n              <input style={nameStyle} />\n            </Input>\n          </Form>\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n          <Form>\n            <Input transparent type=\"text\" placeholder=\"Player 3\" id={2} value={this.props.players[2].name} onChange={this.handleChange}>\n              <input style={nameStyle} />\n            </Input>\n          </Form>\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n          <Form>\n            <Input transparent type=\"text\" placeholder=\"Player 4\" id={3} value={this.props.players[3].name} onChange={this.handleChange}>\n              <input style={nameStyle} />\n            </Input>\n          </Form>\n        </Table.HeaderCell>\n        <Table.HeaderCell>{\"Game\"}</Table.HeaderCell>\n      </Table.Row>\n    </Table.Header>\n     );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport { Table, Checkbox, Input, Button } from 'semantic-ui-react'\n\nclass TableFooter extends Component {\n  handleWinnerInput = (_, data) => {\n    const winner = [...this.props.newGame.winner];\n    winner[data.playerid] = data.checked;\n    this.props.onChange({winner:winner});\n  }\n\n  handlePointInput = (_, data) => {\n    this.props.onChange({points:data.value});\n  }\n\n  handlePointSubmit= (_, data) => {\n    const points = Number(this.props.newGame.points);\n    let nullGame = points === 0;\n    let winnerList = [];\n\n    this.props.newGame.winner.forEach((element, idx) => {\n      if (element) {\n        winnerList.push(idx);\n      }\n    });\n\n    if (nullGame && winnerList.length !== 0) {\n      console.warn(\"Null game must have zero winners.\");\n    } else if (winnerList.length === 0 && !nullGame) {\n      console.warn(\"Zero winners must be nullgame.\");\n    } else if (winnerList.length > 3) {\n      console.warn(\"Can't have more than 3 winners.\");\n    } else {\n      this.props.onSubmit({\n        idx: this.props.newGame.idx,\n        winner: winnerList,\n        points: points\n      });\n    }\n  }\n\n  render() { \n    return (\n      <Table.Footer fullWidth>\n      <Table.Row>\n        <Table.HeaderCell>\n          <Checkbox\n            playerid=\"0\"\n            checked={this.props.newGame.winner[0]}\n            onChange={this.handleWinnerInput}\n          />\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n        <Checkbox\n            playerid=\"1\"\n            checked={this.props.newGame.winner[1]}\n            onChange={this.handleWinnerInput}\n          />\n        </Table.HeaderCell>\n        <Table.HeaderCell><Checkbox\n            playerid=\"2\"\n            checked={this.props.newGame.winner[2]}\n            onChange={this.handleWinnerInput}\n          />\n        </Table.HeaderCell>\n        <Table.HeaderCell><Checkbox\n            playerid=\"3\"\n            checked={this.props.newGame.winner[3]}\n            onChange={this.handleWinnerInput}\n          />\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n        <Input fluid\n          size='small'\n          type='number'\n          max={50}\n          min={0}\n          action={ <Button color='teal' icon='add' onClick={ this.handlePointSubmit } />} \n          onChange={this.handlePointInput}\n          value={this.props.newGame.points}\n          placeholder='Points'/>\n        </Table.HeaderCell>\n      </Table.Row>\n    </Table.Footer>\n    );\n  }\n}\n\nexport default TableFooter;\n","import React, { Component } from 'react';\nimport './App.css';\nimport NavBar from './components/navbar';\nimport GameList from './components/gamelist';\nimport TableHeader from './components/tableHeader';\nimport TableFooter from './components/tableFooter';\nimport { Table } from 'semantic-ui-react'\nimport ls from 'local-storage'\n\nfunction emptyState() {\n  return {\n    players: [\n      {id:0, name:\"Player 1\"},\n      {id:1, name:\"Player 2\"},\n      {id:2, name:\"Player 3\"},\n      {id:3, name:\"Player 4\"}\n    ],\n    games: [],\n    newGame: {\n      idx:0,\n      winner: [false, false, false, false],\n      points: ''\n    }\n  }\n};\n\nclass App extends Component {\n  state = {\n    players: ls.get('players') || emptyState().players,\n    games: ls.get('games') || emptyState().games,\n    newGame: ls.get('newGame') || emptyState().newGame,\n  }\n  emptyState = emptyState;\n\n  handlePlayerChange = (newPlayers) => {\n    this.setState({players:newPlayers})\n    ls.set('players', newPlayers);\n  }\n  \n  handleGameAdded = (newGame) => {\n    const games  = [...this.state.games];\n    if (newGame.idx > this.state.games.length - 1) {\n      games.push({\n        gameID: this.state.games.length,\n        winner: newGame.winner,\n        points: newGame.points\n      })\n    } else {\n      games[newGame.idx] = {\n        gameID: newGame.idx,\n        winner: newGame.winner,\n        points: newGame.points\n      }\n    }\n    this.setState({games:games})\n    ls.set('games', games);\n\n    this.resetNewGame(games.length);\n  }\n\n  handleNewGameChange = (newGame) => {\n    const newGameState = this.state.newGame;\n    if (newGame.winner !== undefined) {\n      newGameState.winner = newGame.winner;\n    } else if (newGame.points !== undefined) {\n      newGameState.points = newGame.points;\n    }\n    this.setState({newGame:newGameState})\n    ls.set('newGame', newGameState);\n  }\n\n  resetNewGame = (newIDX) => {\n    const emptyState = this.emptyState();\n    emptyState.newGame.idx = newIDX;\n    this.setState({newGame:emptyState.newGame})\n    ls.set('newGame', emptyState.newGame);\n  }\n\n  handleReset = () => {\n    const emptyState = this.emptyState();\n    this.setState(emptyState);\n    ls.set('players', emptyState.players);\n    ls.set('games', emptyState.games);\n    ls.set('newGame', emptyState.newGame);\n  }\n\n  handleGameChange = (gameid) => {\n    const game = this.state.games[gameid];\n    const newGame = {\n      idx: gameid,\n      winner: [false, false, false, false],\n      points: game.points\n    }\n\n    game.winner.forEach(winnerIDX => {\n      newGame.winner[winnerIDX] = true\n    });\n\n    this.setState({newGame:newGame});\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n      <NavBar onReset={this.handleReset}/>\n      <Table selectable unstackable columns={5} striped textAlign='center' style={{borderCollapse: \"collapse\"}}>\n        <TableHeader players={this.state.players} onChange={this.handlePlayerChange}/>\n        <GameList games={this.state.games} onChange={this.handleGameChange}/>\n        <TableFooter newGame={this.state.newGame} onChange={this.handleNewGameChange} onSubmit={this.handleGameAdded}/>\n      </Table>\n      </React.Fragment>\n      );\n    }\n  }\n  \n  export default App;\n  ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}