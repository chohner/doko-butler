{"version":3,"sources":["logo.svg","components/helpModal.jsx","components/resetPopup.jsx","components/navbar.jsx","components/game.jsx","components/gamelist.jsx","components/tableHeader.jsx","components/tableFooter.jsx","components/pageFooter.jsx","components/scorePlot.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","HelpModal","props","react_default","a","createElement","Modal","basic","trigger","centered","Header","Content","Description","ResetPopup","state","resetPopupOpen","handleClick","_this","setState","onReset","handleOpen","handleClose","Popup","name","hideOnScroll","open","this","onClose","onOpen","content","Button","color","onClick","on","Component","NavBar","handleResetClick","Menu","secondary","Item","src","require","alt","as","helpModal","resetPopup","position","Label","Icon","Game","handleItemClick","gameid","onChange","_this2","gamePoints","pointString","soloWon","soloLost","concat","points","rowStyle","borderTop","undefined","Table","Row","style","cumulativeScore","map","game","idx","Cell","score","key","selectable","positive","winner","negative","GameList","length","playerPoints","forEach","_","includes","gameList","pointList","gameidx","_this$gameToResultPoi","gameToResultPoints","playeridx","cumPoints","push","PointList","gameListToPointList","games","Body","components_game","TableHeader","handleChange","event","players","Object","toConsumableArray","target","id","value","nameStyle","textAlign","fontWeight","HeaderCell","Form","Input","transparent","type","placeholder","TableFooter","handleFocus","el","currentTarget","setTimeout","select","handleWinnerInput","data","newGame","playerid","checked","handlePointInput","handlePointSubmit","Number","nullGame","winnerList","element","console","warn","onSubmit","Footer","fullWidth","Checkbox","fluid","size","pattern","max","min","action","compact","icon","onFocus","PageFooter","Segment","margin","padding","vertical","Container","Divider","section","List","horizontal","divided","link","process","href","labels","datasets","label","fill","borderColor","backgroundColor","lineTension","ScorePlot","es","emptyState","App","ls","get","handlePlayerChange","newPlayers","set","handleGameAdded","resetNewGame","handleNewGameChange","newGameState","newIDX","handleReset","handleGameChange","winnerIDX","_this$state","Fragment","navbar","fixed","unstackable","columns","striped","borderCollapse","tableHeader","gamelist","tableFooter","scorePlot","pageFooter","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b483353d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.62486c72.svg\";","import React from 'react';\nimport { Modal} from 'semantic-ui-react'\n\nconst HelpModal = (props) => {\n  return (\n    <Modal basic trigger={props.trigger} centered={false}>\n      <Modal.Header>Help</Modal.Header>\n      <Modal.Content>\n      <Modal.Description>\n      <p>You can add a game by entering the game score and winners. Solos points are calculated automatically.</p>\n      <p>You can edit a previous game by clicking on the corresponding score and hitting the edit icon. It will populate the bottom row, adding the game will edit in place.</p>\n      <p>You can edit player names by clicking on them.</p>\n      </Modal.Description>\n      </Modal.Content>\n    </Modal>\n  );\n}\n\nexport default HelpModal;\n","import React, { Component } from 'react';\nimport { Popup, Button } from 'semantic-ui-react'\n\nclass ResetPopup extends Component {\n    state = { resetPopupOpen: false }\n\n    handleClick = () => {\n        this.setState({ resetPopupOpen: false })\n        this.props.onReset();\n    }\n    \n    handleOpen = () => {\n        this.setState({ resetPopupOpen: true })\n    }\n    \n    handleClose = () => {\n        this.setState({ resetPopupOpen: false })\n    }\n    \n    render() { \n        return (\n            <Popup\n            name='resetPopup'\n            hideOnScroll\n            open={this.state.resetPopupOpen}\n            onClose={this.handleClose}\n            onOpen={this.handleOpen}\n            trigger={this.props.trigger}\n            content={<Button color='red' name='reset' content='Confirm reset' onClick={this.handleClick}/>}\n            on='click'\n            />\n            );\n        }\n    }\n    \n    \n    export default ResetPopup;\n    ","import React, { Component } from 'react';\nimport { Menu, Icon, Label, Header } from 'semantic-ui-react';\nimport HelpModal from './helpModal';\nimport ResetPopup from './resetPopup';\n\nclass NavBar extends Component {\n  handleResetClick = () => {\n    this.props.onReset()\n  };\n\n  render() { \n    return (\n      <Menu secondary>\n        <Menu.Item content={<img src={require('../logo.svg')} alt='logo'/>}/>\n        <Menu.Item content={<Header as='h3' content=\"Doko Butler\"/>}/>\n        <HelpModal trigger={<Menu.Item name='help' content='Help'/>}/>\n        <ResetPopup onReset={this.handleResetClick} trigger={\n          <Menu.Item position='right' content={\n            <Label basic color='red'>\n              <Icon name='delete'/> Reset\n            </Label>\n          }/>\n        } />\n      </Menu>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport { Table, Icon, Popup} from 'semantic-ui-react'\n\nclass Game extends Component {\n  handleItemClick = (gameid) => {\n    this.props.onChange(gameid);\n  }\n\n  render() {\n    const { gamePoints } = this.props;\n    const soloPlayed = gamePoints.soloWon || gamePoints.soloLost;\n    const pointString = soloPlayed ? `${3 * gamePoints.points} / ${gamePoints.points}` : gamePoints.points;\n    const rowStyle = { borderTop: gamePoints.gameid%4 !== 0 ? undefined : \"solid 2px gray\"};\n    return (\n      <Table.Row style={rowStyle}>\n        {\n          gamePoints.cumulativeScore.map((game, idx) => (\n          <Table.Cell content={game.score} key={idx} selectable positive={game.winner} negative={!game.winner}/>\n        ))}\n        <Popup\n          hideOnScroll\n          trigger={\n            <Table.Cell content={pointString}/>\n            }\n          content={\n            <Icon\n              name='edit outline'\n              onClick={() => this.handleItemClick(gamePoints.gameid)}\n            />\n          }\n          on='click'\n          position='top center'\n        />\n      </Table.Row>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from 'react';\nimport Game from './game';\nimport { Table } from 'semantic-ui-react'\n\nclass GameList extends Component {\n  gameToResultPoints(game) {\n    const soloWon = game.winner.length === 1;\n    const soloLost = game.winner.length === 3;\n\n    const playerPoints = [{}, {}, {}, {}];\n    playerPoints.forEach((_, idx) => {\n      if (game.winner.includes(idx)) {\n        playerPoints[idx].score = soloWon ? 3 * game.points : game.points;\n        playerPoints[idx].winner = true;\n      } else {\n        playerPoints[idx].score = soloLost ? -3 * game.points : -game.points;\n        playerPoints[idx].winner = false;\n      }\n    });\n\n    return {\n      playerPoints,\n      soloWon,\n      soloLost,\n    };\n  }\n\n  gameListToPointList(gameList) {\n    const pointList = [];\n    gameList.forEach((game, gameidx) => {\n      const {playerPoints, soloWon, soloLost} = this.gameToResultPoints(game);\n\n      const cumulativeScore = playerPoints.map((_, playeridx) => {\n        let cumPoints = playerPoints[playeridx];\n        if (gameidx !== 0) {\n          cumPoints.points += pointList[gameidx-1].cumulativeScore[playeridx].points\n        }\n        return cumPoints\n      });\n\n      pointList.push({\n        gameid: game.gameid,\n        points: game.points,\n        soloWon,\n        soloLost,\n        cumulativeScore\n      })\n    });\n    return pointList;\n  }\n\n  render() {\n    const PointList = this.gameListToPointList(this.props.games);\n\n    return (\n      <Table.Body>\n        {PointList.map((gamePoints, idx) => (\n          <Game\n          key={idx}\n          gamePoints={gamePoints}\n          onChange={this.props.onChange}\n          />\n        ))}\n      </Table.Body>\n    )\n  }\n}\n\nexport default GameList;\n","import React, { Component } from 'react';\nimport { Table, Form, Input } from 'semantic-ui-react'\n\nclass TableHeader extends Component {\n  handleChange = (event) => {\n    const players = [...this.props.players];\n    players[event.target.id].name = event.target.value;\n    this.props.onChange(players);\n  }\n\n  render() { \n    const nameStyle = {\n      textAlign: \"center\",\n      fontWeight: \"bold\"\n    };\n\n    return ( \n      <Table.Header>\n        <Table.Row>\n        <Table.HeaderCell>\n          <Form>\n            <Input transparent type=\"text\" placeholder=\"Player 1\" id={0} value={this.props.players[0].name} onChange={this.handleChange}>\n              <input style={nameStyle} />\n            </Input>\n          </Form>\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n          <Form>\n            <Input transparent type=\"text\" placeholder=\"Player 2\" id={1} value={this.props.players[1].name} onChange={this.handleChange}>\n              <input style={nameStyle} />\n            </Input>\n          </Form>\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n          <Form>\n            <Input transparent type=\"text\" placeholder=\"Player 3\" id={2} value={this.props.players[2].name} onChange={this.handleChange}>\n              <input style={nameStyle} />\n            </Input>\n          </Form>\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n          <Form>\n            <Input transparent type=\"text\" placeholder=\"Player 4\" id={3} value={this.props.players[3].name} onChange={this.handleChange}>\n              <input style={nameStyle} />\n            </Input>\n          </Form>\n        </Table.HeaderCell>\n        <Table.HeaderCell>{\"Game\"}</Table.HeaderCell>\n      </Table.Row>\n    </Table.Header>\n     );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport { Table, Checkbox, Input, Button } from 'semantic-ui-react'\n\nclass TableFooter extends Component {\n  handleFocus = (event) => {\n    const el = event.currentTarget;\n      setTimeout(() => {\n          el.select();\n      }, 0);\n  }\n\n  handleWinnerInput = (_, data) => {\n    const winner = [...this.props.newGame.winner];\n    winner[data.playerid] = data.checked;\n    this.props.onChange({winner:winner});\n  }\n\n  handlePointInput = (_, data) => {\n    this.props.onChange({points:data.value});\n  }\n\n  handlePointSubmit= (_, data) => {\n    const points = Number(this.props.newGame.points);\n    let nullGame = points === 0;\n    let winnerList = [];\n\n    this.props.newGame.winner.forEach((element, idx) => {\n      if (element) {\n        winnerList.push(idx);\n      }\n    });\n\n    if (nullGame && winnerList.length !== 0) {\n      console.warn(\"Null game must have zero winners.\");\n    } else if (winnerList.length === 0 && !nullGame) {\n      console.warn(\"Zero winners must be nullgame.\");\n    } else if (winnerList.length > 3) {\n      console.warn(\"Can't have more than 3 winners.\");\n    } else {\n      this.props.onSubmit({\n        gameid: this.props.newGame.gameid,\n        winner: winnerList,\n        points: points\n      });\n    }\n  }\n\n  render() { \n    return (\n      <Table.Footer fullWidth>\n      <Table.Row>\n        <Table.HeaderCell>\n          <Checkbox\n            playerid=\"0\"\n            checked={this.props.newGame.winner[0]}\n            onChange={this.handleWinnerInput}\n          />\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n        <Checkbox\n            playerid=\"1\"\n            checked={this.props.newGame.winner[1]}\n            onChange={this.handleWinnerInput}\n          />\n        </Table.HeaderCell>\n        <Table.HeaderCell><Checkbox\n            playerid=\"2\"\n            checked={this.props.newGame.winner[2]}\n            onChange={this.handleWinnerInput}\n          />\n        </Table.HeaderCell>\n        <Table.HeaderCell><Checkbox\n            playerid=\"3\"\n            checked={this.props.newGame.winner[3]}\n            onChange={this.handleWinnerInput}\n          />\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n        <Input fluid\n          size='mini'\n          type='number'\n          pattern=\"\\d*\"\n          max={50}\n          min={0}\n          action={ <Button compact color='teal' icon='add' size='mini' onClick={ this.handlePointSubmit } />} \n          onFocus={this.handleFocus}\n          onChange={this.handlePointInput}\n          value={this.props.newGame.points}\n          placeholder='Points'/>\n        </Table.HeaderCell>\n      </Table.Row>\n    </Table.Footer>\n    );\n  }\n}\n\nexport default TableFooter;\n","import React from 'react';\nimport { Segment, Container, List, Divider, Icon } from 'semantic-ui-react'\n\nconst PageFooter = () => {\n  return (\n    <Segment style={{ margin: '5em 0em 0em', padding: '5em 0em' }} vertical>\n      <Container textAlign='center'>\n        <Divider section />\n        <List horizontal divided link size='small'>\n          <List.Item content={`${process.env.REACT_APP_NAME} ${process.env.REACT_APP_VERSION}`}/>\n          <List.Item as='a' href='https://github.com/chohner/doko-butler' target=\"_blank\">\n            <Icon name='github'/> github\n          </List.Item>\n          <List.Item as='a' href='https://chohner.com' target=\"_blank\" content={\"made by chohner\"}/>\n        </List>\n      </Container>\n    </Segment>\n  );\n}\n\nexport default PageFooter;\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst data = {\n    labels: [1, 2, 3, 4],\n\n    datasets: [\n      {\n        label: 'Player 1',\n        fill: false,\n        borderColor: 'rgba(22, 70, 112,1)',\n        backgroundColor: 'rgba(22, 70, 112,0.4)',\n        lineTension: 0.2,\n        data: [0, 3, 2, 5]\n      }, {\n        label: 'Player 2',\n        fill: false,\n        borderColor: 'rgba(145, 80, 150,1)',\n        backgroundColor: 'rgba(145, 80, 150,0.4)',\n        lineTension: 0.2,\n        data: [0, -3, 1, 2]\n      }, {\n        label: 'Player 3',\n        fill: false,\n        borderColor: 'rgba(245, 89, 110,1)',\n        backgroundColor: 'rgba(245, 89, 110,0.4)',\n        lineTension: 0.2,\n        data: [0, 1, 4, -1]\n      }, {\n        label: 'Player 4',\n        fill: false,\n        borderColor: 'rgba(255, 166, 0,1)',\n        backgroundColor: 'rgba(255, 166, 0,0.4)',\n        lineTension: 0.2,\n        data: [0, 1, -3, -5]\n      }\n    ]\n  };\n  \nconst ScorePlot = () => {\n    return ( <Line data={data} /> );\n}\n \nexport default ScorePlot;\n","import React, { Component } from 'react';\nimport './App.css';\nimport NavBar from './components/navbar';\nimport GameList from './components/gamelist';\nimport TableHeader from './components/tableHeader';\nimport TableFooter from './components/tableFooter';\nimport PageFooter from './components/pageFooter';\nimport ScorePlot from './components/scorePlot';\nimport { Table } from 'semantic-ui-react'\nimport ls from 'local-storage'\n\nfunction emptyState() {\n  return {\n    players: [\n      {id:0, name:\"Player 1\"},\n      {id:1, name:\"Player 2\"},\n      {id:2, name:\"Player 3\"},\n      {id:3, name:\"Player 4\"}\n    ],\n    games: [],\n    newGame: {\n      gameid: 0,\n      winner: [false, false, false, false],\n      points: ''\n    }\n  }\n};\n\nclass App extends Component {\n  state = {\n    players: ls.get('players') || emptyState().players,\n    games: ls.get('games') || emptyState().games,\n    newGame: ls.get('newGame') || emptyState().newGame,\n  }\n  emptyState = emptyState;\n\n  handlePlayerChange = (newPlayers) => {\n    this.setState({players:newPlayers})\n    ls.set('players', newPlayers);\n  }\n  \n  handleGameAdded = (newGame) => {\n    const games  = [...this.state.games];\n    if (newGame.gameid > this.state.games.length - 1) {\n      games.push({\n        gameid: this.state.games.length,\n        winner: newGame.winner,\n        points: newGame.points\n      })\n    } else {\n      games[newGame.gameid] = {\n        gameid: newGame.gameid,\n        winner: newGame.winner,\n        points: newGame.points\n      }\n    }\n    this.setState({games:games})\n    ls.set('games', games);\n\n    this.resetNewGame(games.length);\n  }\n\n  handleNewGameChange = (newGame) => {\n    const newGameState = this.state.newGame;\n    if (newGame.winner !== undefined) {\n      newGameState.winner = newGame.winner;\n    } else if (newGame.points !== undefined) {\n      newGameState.points = newGame.points;\n    }\n    this.setState({newGame:newGameState})\n    ls.set('newGame', newGameState);\n  }\n\n  resetNewGame = (newIDX) => {\n    const emptyState = this.emptyState();\n    emptyState.newGame.gameid = newIDX;\n    this.setState({newGame:emptyState.newGame})\n    ls.set('newGame', emptyState.newGame);\n  }\n\n  handleReset = () => {\n    const emptyState = this.emptyState();\n    this.setState(emptyState);\n    ls.set('players', emptyState.players);\n    ls.set('games', emptyState.games);\n    ls.set('newGame', emptyState.newGame);\n  }\n\n  handleGameChange = (idx) => {\n    const game = this.state.games[idx];\n    const newGame = {\n      gameid: idx,\n      winner: [false, false, false, false],\n      points: game.points\n    }\n\n    game.winner.forEach(winnerIDX => {\n      newGame.winner[winnerIDX] = true\n    });\n\n    this.setState({newGame:newGame});\n  }\n\n  render() {\n    const { players, games, newGame } = this.state\n\n    return (\n      <React.Fragment>\n      <NavBar onReset={this.handleReset}/>\n      <Table fixed selectable unstackable columns={5} striped textAlign='center' size='small' style={{borderCollapse: \"collapse\"}}>\n        <TableHeader players={players} onChange={this.handlePlayerChange}/>\n        <GameList games={games} onChange={this.handleGameChange}/>\n        <TableFooter newGame={newGame} onChange={this.handleNewGameChange} onSubmit={this.handleGameAdded}/>\n      </Table>\n      <ScorePlot/>\n      <PageFooter />\n      </React.Fragment>\n      );\n    }\n  }\n  \n  export default App;\n  ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}