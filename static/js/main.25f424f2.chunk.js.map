{"version":3,"sources":["components/navbar.jsx","components/game.jsx","components/gamelist.jsx","components/tableHeader.jsx","components/tableFooter.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","handleItemClick","_","data","name","_this","props","onReset","react_default","a","createElement","Menu","secondary","Item","src","alt","content","onClick","this","position","Icon","color","Component","Game","Table","Row","style","borderTop","idx","undefined","Cell","game","soloWon","soloLost","concat","points","GameList","winner","length","ResultPoints","0","1","2","3","Object","keys","forEach","w","includes","Number","gameList","pointList","gameIDX","gameToResultPoints","push","gameID","PointList","gameListToPointList","games","Body","map","components_game","key","id","TableHeader","handleChange","event","players","toConsumableArray","target","value","onChange","nameStyle","textAlign","fontWeight","Header","HeaderCell","Form","Input","transparent","type","placeholder","newState","TableFooter","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleWinnerInput","state","playerid","checked","setState","handlePointInput","resetState","handlePointSubmit","nullGame","winnerList","element","console","warn","assign","Footer","fullWidth","Checkbox","fluid","size","max","min","action","Button","icon","emptyState","App","ls","get","handlePlayerChange","newPlayers","set","handleGameAdded","newGame","handleReset","Fragment","navbar","selectable","unstackable","columns","striped","borderCollapse","tableHeader","gamelist","tableFooter","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.25f424f2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Menu, Icon } from 'semantic-ui-react'\n\nclass NavBar extends Component {\n  handleItemClick = (_, data) => {\n    if (data.name === \"reset\") {\n      this.props.onReset()\n    }\n  };\n\n  render() { \n    return (\n      <Menu secondary>\n        <Menu.Item name='icon'>\n          <img src='https://react.semantic-ui.com/logo.png' alt='logo'/>\n        </Menu.Item>\n        <Menu.Item name='reviews' content='Help' onClick={this.handleItemClick}/>\n        <Menu.Item name='reset' onClick={this.handleItemClick} position='right'>\n          <Icon name='delete' color='orange'/> Reset\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from 'react';\nimport { Table } from 'semantic-ui-react'\n\nconst Game = props => {\n  return (\n    <Table.Row style={{ borderTop: props.idx%4 !== 0 ? undefined : \"solid 2px gray\"}}>\n        <Table.Cell>{props.game[0]}</Table.Cell>\n        <Table.Cell>{props.game[1]}</Table.Cell>\n        <Table.Cell>{props.game[2]}</Table.Cell>\n        <Table.Cell>{props.game[3]}</Table.Cell>\n        <Table.Cell>{\n          (props.game.soloWon || props.game.soloLost) ? `${3 * props.game.points} / ${props.game.points}` : props.game.points\n        }</Table.Cell>\n      </Table.Row>\n  );\n}\n\nexport default Game;\n","import React, { Component } from 'react';\nimport Game from './game';\nimport { Table } from 'semantic-ui-react'\n\nclass GameList extends Component {\n  gameToResultPoints(game) {\n    const soloWon = game.winner.length === 1;\n    const soloLost = game.winner.length === 3;\n\n    const ResultPoints = {0:0, 1:0, 2:0, 3:0};\n    Object.keys(ResultPoints).forEach(w => {\n      if (game.winner.includes(Number(w))) {\n        if (soloWon) {\n          ResultPoints[w] += 3 * game.points;\n        } else {\n          ResultPoints[w] +=game.points;\n        } \n      } else {\n        if (soloLost) {\n          ResultPoints[w] -= 3 * game.points;\n        } else {\n          ResultPoints[w] -= game.points;\n        }\n      }\n    });\n    ResultPoints.soloWon = soloWon;\n    ResultPoints.soloLost = soloLost;\n\n    return ResultPoints;\n  }\n\n  gameListToPointList(gameList) {\n    const pointList = [];\n    gameList.forEach((game, gameIDX) => {\n      const ResultPoints = this.gameToResultPoints(game);\n      pointList.push({\n        gameID: game.gameID,\n        points: game.points,\n        soloWon: ResultPoints.soloWon,\n        soloLost: ResultPoints.soloLost,\n        0: gameIDX === 0 ? ResultPoints[0] : ResultPoints[0] + pointList[pointList.length-1][0],\n        1: gameIDX === 0 ? ResultPoints[1] : ResultPoints[1] + pointList[pointList.length-1][1],\n        2: gameIDX === 0 ? ResultPoints[2] : ResultPoints[2] + pointList[pointList.length-1][2],\n        3: gameIDX === 0 ? ResultPoints[3] : ResultPoints[3] + pointList[pointList.length-1][3],\n      })\n    });\n    return pointList;\n  }\n\n  render() {\n    const PointList = this.gameListToPointList(this.props.games);\n\n    return (\n      <Table.Body>\n        {PointList.map((game, gameIDX) => (\n          <Game\n          key={gameIDX}\n          idx={gameIDX}\n          id={game.gameID}\n          game={game}/>\n        ))}\n      </Table.Body>\n    )\n  }\n}\n\nexport default GameList;\n","import React, { Component } from 'react';\nimport { Table, Form, Input } from 'semantic-ui-react'\n\nclass TableHeader extends Component {\n  handleChange = (event) => {\n    const players = [...this.props.players];\n    players[event.target.id].name = event.target.value;\n    this.props.onChange(players);\n  }\n\n  render() { \n    const nameStyle = {\n      textAlign: \"center\",\n      fontWeight: \"bold\"\n    };\n\n    return ( \n      <Table.Header>\n        <Table.Row>\n        <Table.HeaderCell>\n          <Form>\n            <Input transparent type=\"text\" placeholder=\"Player 1\" id={0} value={this.props.players[0].name} onChange={this.handleChange}>\n              <input style={nameStyle} />\n            </Input>\n          </Form>\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n          <Form>\n            <Input transparent type=\"text\" placeholder=\"Player 2\" id={1} value={this.props.players[1].name} onChange={this.handleChange}>\n              <input style={nameStyle} />\n            </Input>\n          </Form>\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n          <Form>\n            <Input transparent type=\"text\" placeholder=\"Player 3\" id={2} value={this.props.players[2].name} onChange={this.handleChange}>\n              <input style={nameStyle} />\n            </Input>\n          </Form>\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n          <Form>\n            <Input transparent type=\"text\" placeholder=\"Player 4\" id={3} value={this.props.players[3].name} onChange={this.handleChange}>\n              <input style={nameStyle} />\n            </Input>\n          </Form>\n        </Table.HeaderCell>\n        <Table.HeaderCell>{\"Game\"}</Table.HeaderCell>\n      </Table.Row>\n    </Table.Header>\n     );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport { Table, Checkbox, Input, Button } from 'semantic-ui-react'\n\nconst newState = {\n  winner: [false, false, false, false],\n  points: ''\n};\n\nclass TableFooter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = Object.assign({}, newState);\n  }\n\n  handleWinnerInput = (_, data) => {\n    const winner = [...this.state.winner];\n    winner[data.playerid] = data.checked;\n    this.setState({winner:winner});\n  }\n\n  handlePointInput = (_, data) => {\n    this.setState({points:data.value});\n  }\n\n  resetState = () => {\n    this.setState(newState);\n  }\n\n  handlePointSubmit= (_, data) => {\n    const points = Number(this.state.points);\n    let nullGame = points === 0;\n    let winnerList = [];\n\n    this.state.winner.forEach((element, idx) => {\n      if (element) {\n        winnerList.push(idx);\n      }\n    });\n\n    if (nullGame && winnerList.length !== 0) {\n      console.warn(\"Null game must have zero winners.\");\n    } else if (winnerList.length === 0 && !nullGame) {\n      console.warn(\"Zero winners must be nullgame.\");\n    } else if (winnerList.length > 3) {\n      console.warn(\"Can't have more than 3 winners.\");\n    } else {\n      this.props.onChange({\n        winner: winnerList,\n        points: points\n      });\n      this.resetState();\n    }\n  }\n\n  render() { \n    return (\n      <Table.Footer fullWidth>\n      <Table.Row>\n        <Table.HeaderCell>\n          <Checkbox\n            playerid=\"0\"\n            checked={this.state.winner[0]}\n            onChange={this.handleWinnerInput}\n          />\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n        <Checkbox\n            playerid=\"1\"\n            checked={this.state.winner[1]}\n            onChange={this.handleWinnerInput}\n          />\n        </Table.HeaderCell>\n        <Table.HeaderCell><Checkbox\n            playerid=\"2\"\n            checked={this.state.winner[2]}\n            onChange={this.handleWinnerInput}\n          />\n        </Table.HeaderCell>\n        <Table.HeaderCell><Checkbox\n            playerid=\"3\"\n            checked={this.state.winner[3]}\n            onChange={this.handleWinnerInput}\n          />\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n        <Input fluid\n          size='small'\n          type='number'\n          max={50}\n          min={0}\n          action={ <Button color='teal' icon='add' onClick={ this.handlePointSubmit } />} \n          onChange={this.handlePointInput}\n          value={this.state.points}\n          placeholder='Points'/>\n        </Table.HeaderCell>\n      </Table.Row>\n    </Table.Footer>\n    );\n  }\n}\n\nexport default TableFooter;\n","import React, { Component } from 'react';\nimport './App.css';\nimport NavBar from './components/navbar';\nimport GameList from './components/gamelist';\nimport TableHeader from './components/tableHeader';\nimport TableFooter from './components/tableFooter';\nimport { Table } from 'semantic-ui-react'\nimport ls from 'local-storage'\n\nconst emptyState = {\n  players: [\n    {id:0, name:\"Player 1\"},\n    {id:1, name:\"Player 2\"},\n    {id:2, name:\"Player 3\"},\n    {id:3, name:\"Player 4\"}\n  ],\n  games: [],\n}\n\nclass App extends Component {\n  state = {\n    players: ls.get('players') || emptyState.players,\n    games: ls.get('games') || emptyState.games,\n  }\n\n  handlePlayerChange = (newPlayers) => {\n    this.setState({players:newPlayers})\n    ls.set('players', newPlayers);\n  }\n  \n  handleGameAdded = (newGame) => {\n    const games  = [...this.state.games];\n    games.push({\n      gameID: this.state.games.length,\n      winner: newGame.winner,\n      points: newGame.points\n    })\n\n    this.setState({games:games})\n    ls.set('games', games);\n  }\n\n  handleReset = () => {\n    this.setState(emptyState);\n    ls.set('players', emptyState.players);\n    ls.set('games', emptyState.games);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n      <NavBar onReset={this.handleReset}/>\n      <Table selectable unstackable columns={5} striped textAlign='center' style={{borderCollapse: \"collapse\"}}>\n        <TableHeader players={this.state.players} onChange={this.handlePlayerChange}/>\n        <GameList games={this.state.games}/>\n        <TableFooter onChange={this.handleGameAdded}/>\n      </Table>\n      </React.Fragment>\n      );\n    }\n  }\n  \n  export default App;\n  ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}