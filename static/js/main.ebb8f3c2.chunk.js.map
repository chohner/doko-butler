{"version":3,"sources":["logo.svg","components/helpModal.jsx","components/resetPopup.jsx","components/navbar.jsx","components/game.jsx","components/gamelist.jsx","components/tableHeader.jsx","components/tableFooter.jsx","components/pageFooter.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","HelpModal","props","react_default","a","createElement","Modal","basic","trigger","centered","Header","Content","Description","ResetPopup","state","resetPopupOpen","handleClick","_this","setState","onReset","handleOpen","handleClose","Popup","name","hideOnScroll","open","this","onClose","onOpen","content","Button","color","onClick","on","Component","NavBar","handleResetClick","Menu","secondary","Item","src","require","alt","as","helpModal","resetPopup","position","Label","Icon","Game","handleItemClick","gameid","onChange","_this2","Table","Row","style","borderTop","undefined","Cell","game","soloWon","soloLost","concat","points","GameList","winner","length","ResultPoints","0","1","2","3","Object","keys","forEach","w","includes","Number","gameList","pointList","idx","gameToResultPoints","push","PointList","gameListToPointList","games","Body","map","components_game","key","TableHeader","handleChange","event","players","toConsumableArray","target","id","value","nameStyle","textAlign","fontWeight","HeaderCell","Form","Input","transparent","type","placeholder","TableFooter","handleFocus","el","currentTarget","setTimeout","select","handleWinnerInput","_","data","newGame","playerid","checked","handlePointInput","handlePointSubmit","nullGame","winnerList","element","console","warn","onSubmit","Footer","fullWidth","Checkbox","fluid","size","pattern","max","min","action","compact","icon","onFocus","PageFooter","Segment","margin","padding","vertical","Container","Divider","section","List","horizontal","divided","link","process","href","emptyState","App","ls","get","handlePlayerChange","newPlayers","set","handleGameAdded","resetNewGame","handleNewGameChange","newGameState","newIDX","handleReset","handleGameChange","winnerIDX","_this$state","Fragment","navbar","fixed","selectable","unstackable","columns","striped","borderCollapse","tableHeader","gamelist","tableFooter","pageFooter","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ebb8f3c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.62486c72.svg\";","import React from 'react';\nimport { Modal} from 'semantic-ui-react'\n\nconst HelpModal = (props) => {\n  return (\n    <Modal basic trigger={props.trigger} centered={false}>\n      <Modal.Header>Help</Modal.Header>\n      <Modal.Content>\n      <Modal.Description>\n      <p>You can add a game by entering the game score and winners. Solos points are calculated automatically.</p>\n      <p>You can edit a previous game by clicking on the corresponding score and hitting the edit icon. It will populate the bottom row, adding the game will edit in place.</p>\n      <p>You can edit player names by clicking on them.</p>\n      </Modal.Description>\n      </Modal.Content>\n    </Modal>\n  );\n}\n\nexport default HelpModal;\n","import React, { Component } from 'react';\nimport { Popup, Button } from 'semantic-ui-react'\n\nclass ResetPopup extends Component {\n    state = { resetPopupOpen: false }\n\n    handleClick = () => {\n        this.setState({ resetPopupOpen: false })\n        this.props.onReset();\n    }\n    \n    handleOpen = () => {\n        this.setState({ resetPopupOpen: true })\n    }\n    \n    handleClose = () => {\n        this.setState({ resetPopupOpen: false })\n    }\n    \n    render() { \n        return (\n            <Popup\n            name='resetPopup'\n            hideOnScroll\n            open={this.state.resetPopupOpen}\n            onClose={this.handleClose}\n            onOpen={this.handleOpen}\n            trigger={this.props.trigger}\n            content={<Button color='red' name='reset' content='Confirm reset' onClick={this.handleClick}/>}\n            on='click'\n            />\n            );\n        }\n    }\n    \n    \n    export default ResetPopup;\n    ","import React, { Component } from 'react';\nimport { Menu, Icon, Label, Header } from 'semantic-ui-react';\nimport HelpModal from './helpModal';\nimport ResetPopup from './resetPopup';\n\nclass NavBar extends Component {\n  handleResetClick = () => {\n    this.props.onReset()\n  };\n\n  render() { \n    return (\n      <Menu secondary>\n        <Menu.Item content={<img src={require('../logo.svg')} alt='logo'/>}/>\n        <Menu.Item content={<Header as='h3' content=\"Doko Butler\"/>}/>\n        <HelpModal trigger={<Menu.Item name='help' content='Help'/>}/>\n        <ResetPopup onReset={this.handleResetClick} trigger={\n          <Menu.Item position='right' content={\n            <Label basic color='red'>\n              <Icon name='delete'/> Reset\n            </Label>\n          }/>\n        } />\n      </Menu>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport { Table, Icon, Popup} from 'semantic-ui-react'\n\nclass Game extends Component {\n  handleItemClick = (gameid) => {\n    this.props.onChange(gameid);\n  }\n\n  render() { \n    return (\n      <Table.Row style={{ borderTop: this.props.gameid%4 !== 0 ? undefined : \"solid 2px gray\"}}>\n        <Table.Cell>{this.props.game[0]}</Table.Cell>\n        <Table.Cell>{this.props.game[1]}</Table.Cell>\n        <Table.Cell>{this.props.game[2]}</Table.Cell>\n        <Table.Cell>{this.props.game[3]}</Table.Cell>\n\n        <Popup\n          hideOnScroll\n          trigger={\n            <Table.Cell>\n            {(this.props.game.soloWon || this.props.game.soloLost) ? `${3 * this.props.game.points} / ${this.props.game.points}` : this.props.game.points}\n            </Table.Cell>\n            }\n          content={\n            <Icon\n              name='edit outline'\n              onClick={() => this.handleItemClick(this.props.game.gameid)}\n            />\n          }\n          on='click'\n          position='top center'\n        />\n      </Table.Row>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from 'react';\nimport Game from './game';\nimport { Table } from 'semantic-ui-react'\n\nclass GameList extends Component {\n  gameToResultPoints(game) {\n    const soloWon = game.winner.length === 1;\n    const soloLost = game.winner.length === 3;\n\n    const ResultPoints = {0:0, 1:0, 2:0, 3:0};\n    Object.keys(ResultPoints).forEach(w => {\n      if (game.winner.includes(Number(w))) {\n        if (soloWon) {\n          ResultPoints[w] += 3 * game.points;\n        } else {\n          ResultPoints[w] +=game.points;\n        } \n      } else {\n        if (soloLost) {\n          ResultPoints[w] -= 3 * game.points;\n        } else {\n          ResultPoints[w] -= game.points;\n        }\n      }\n    });\n    ResultPoints.soloWon = soloWon;\n    ResultPoints.soloLost = soloLost;\n\n    return ResultPoints;\n  }\n\n  gameListToPointList(gameList) {\n    const pointList = [];\n    gameList.forEach((game, idx) => {\n      const ResultPoints = this.gameToResultPoints(game);\n      pointList.push({\n        gameid: game.gameid,\n        points: game.points,\n        soloWon: ResultPoints.soloWon,\n        soloLost: ResultPoints.soloLost,\n        0: idx === 0 ? ResultPoints[0] : ResultPoints[0] + pointList[pointList.length-1][0],\n        1: idx === 0 ? ResultPoints[1] : ResultPoints[1] + pointList[pointList.length-1][1],\n        2: idx === 0 ? ResultPoints[2] : ResultPoints[2] + pointList[pointList.length-1][2],\n        3: idx === 0 ? ResultPoints[3] : ResultPoints[3] + pointList[pointList.length-1][3],\n      })\n    });\n    return pointList;\n  }\n\n  render() {\n    const PointList = this.gameListToPointList(this.props.games);\n\n    return (\n      <Table.Body>\n        {PointList.map((game, idx) => (\n          <Game\n          key={idx}\n          game={game}\n          onChange={this.props.onChange}\n          />\n        ))}\n      </Table.Body>\n    )\n  }\n}\n\nexport default GameList;\n","import React, { Component } from 'react';\nimport { Table, Form, Input } from 'semantic-ui-react'\n\nclass TableHeader extends Component {\n  handleChange = (event) => {\n    const players = [...this.props.players];\n    players[event.target.id].name = event.target.value;\n    this.props.onChange(players);\n  }\n\n  render() { \n    const nameStyle = {\n      textAlign: \"center\",\n      fontWeight: \"bold\"\n    };\n\n    return ( \n      <Table.Header>\n        <Table.Row>\n        <Table.HeaderCell>\n          <Form>\n            <Input transparent type=\"text\" placeholder=\"Player 1\" id={0} value={this.props.players[0].name} onChange={this.handleChange}>\n              <input style={nameStyle} />\n            </Input>\n          </Form>\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n          <Form>\n            <Input transparent type=\"text\" placeholder=\"Player 2\" id={1} value={this.props.players[1].name} onChange={this.handleChange}>\n              <input style={nameStyle} />\n            </Input>\n          </Form>\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n          <Form>\n            <Input transparent type=\"text\" placeholder=\"Player 3\" id={2} value={this.props.players[2].name} onChange={this.handleChange}>\n              <input style={nameStyle} />\n            </Input>\n          </Form>\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n          <Form>\n            <Input transparent type=\"text\" placeholder=\"Player 4\" id={3} value={this.props.players[3].name} onChange={this.handleChange}>\n              <input style={nameStyle} />\n            </Input>\n          </Form>\n        </Table.HeaderCell>\n        <Table.HeaderCell>{\"Game\"}</Table.HeaderCell>\n      </Table.Row>\n    </Table.Header>\n     );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport { Table, Checkbox, Input, Button } from 'semantic-ui-react'\n\nclass TableFooter extends Component {\n  handleFocus = (event) => {\n    const el = event.currentTarget;\n      setTimeout(() => {\n          el.select();\n      }, 0);\n  }\n\n  handleWinnerInput = (_, data) => {\n    const winner = [...this.props.newGame.winner];\n    winner[data.playerid] = data.checked;\n    this.props.onChange({winner:winner});\n  }\n\n  handlePointInput = (_, data) => {\n    this.props.onChange({points:data.value});\n  }\n\n  handlePointSubmit= (_, data) => {\n    const points = Number(this.props.newGame.points);\n    let nullGame = points === 0;\n    let winnerList = [];\n\n    this.props.newGame.winner.forEach((element, idx) => {\n      if (element) {\n        winnerList.push(idx);\n      }\n    });\n\n    if (nullGame && winnerList.length !== 0) {\n      console.warn(\"Null game must have zero winners.\");\n    } else if (winnerList.length === 0 && !nullGame) {\n      console.warn(\"Zero winners must be nullgame.\");\n    } else if (winnerList.length > 3) {\n      console.warn(\"Can't have more than 3 winners.\");\n    } else {\n      this.props.onSubmit({\n        gameid: this.props.newGame.gameid,\n        winner: winnerList,\n        points: points\n      });\n    }\n  }\n\n  render() { \n    return (\n      <Table.Footer fullWidth>\n      <Table.Row>\n        <Table.HeaderCell>\n          <Checkbox\n            playerid=\"0\"\n            checked={this.props.newGame.winner[0]}\n            onChange={this.handleWinnerInput}\n          />\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n        <Checkbox\n            playerid=\"1\"\n            checked={this.props.newGame.winner[1]}\n            onChange={this.handleWinnerInput}\n          />\n        </Table.HeaderCell>\n        <Table.HeaderCell><Checkbox\n            playerid=\"2\"\n            checked={this.props.newGame.winner[2]}\n            onChange={this.handleWinnerInput}\n          />\n        </Table.HeaderCell>\n        <Table.HeaderCell><Checkbox\n            playerid=\"3\"\n            checked={this.props.newGame.winner[3]}\n            onChange={this.handleWinnerInput}\n          />\n        </Table.HeaderCell>\n        <Table.HeaderCell>\n        <Input fluid\n          size='mini'\n          type='number'\n          pattern=\"\\d*\"\n          max={50}\n          min={0}\n          action={ <Button compact color='teal' icon='add' size='mini' onClick={ this.handlePointSubmit } />} \n          onFocus={this.handleFocus}\n          onChange={this.handlePointInput}\n          value={this.props.newGame.points}\n          placeholder='Points'/>\n        </Table.HeaderCell>\n      </Table.Row>\n    </Table.Footer>\n    );\n  }\n}\n\nexport default TableFooter;\n","import React from 'react';\nimport { Segment, Container, List, Divider, Icon } from 'semantic-ui-react'\n\nconst PageFooter = () => {\n  return (\n    <Segment style={{ margin: '5em 0em 0em', padding: '5em 0em' }} vertical>\n      <Container textAlign='center'>\n        <Divider section />\n        <List horizontal divided link size='small'>\n          <List.Item content={`${process.env.REACT_APP_NAME} ${process.env.REACT_APP_VERSION}`}/>\n          <List.Item as='a' href='https://github.com/chohner/doko-butler' target=\"_blank\">\n            <Icon name='github'/> github\n          </List.Item>\n          <List.Item as='a' href='https://chohner.com' target=\"_blank\" content={\"made by chohner\"}/>\n        </List>\n      </Container>\n    </Segment>\n  );\n}\n\nexport default PageFooter;\n","import React, { Component } from 'react';\nimport './App.css';\nimport NavBar from './components/navbar';\nimport GameList from './components/gamelist';\nimport TableHeader from './components/tableHeader';\nimport TableFooter from './components/tableFooter';\nimport PageFooter from './components/pageFooter';\nimport { Table } from 'semantic-ui-react'\nimport ls from 'local-storage'\n\nfunction emptyState() {\n  return {\n    players: [\n      {id:0, name:\"Player 1\"},\n      {id:1, name:\"Player 2\"},\n      {id:2, name:\"Player 3\"},\n      {id:3, name:\"Player 4\"}\n    ],\n    games: [],\n    newGame: {\n      gameid: 0,\n      winner: [false, false, false, false],\n      points: ''\n    }\n  }\n};\n\nclass App extends Component {\n  state = {\n    players: ls.get('players') || emptyState().players,\n    games: ls.get('games') || emptyState().games,\n    newGame: ls.get('newGame') || emptyState().newGame,\n  }\n  emptyState = emptyState;\n\n  handlePlayerChange = (newPlayers) => {\n    this.setState({players:newPlayers})\n    ls.set('players', newPlayers);\n  }\n  \n  handleGameAdded = (newGame) => {\n    const games  = [...this.state.games];\n    if (newGame.gameid > this.state.games.length - 1) {\n      games.push({\n        gameid: this.state.games.length,\n        winner: newGame.winner,\n        points: newGame.points\n      })\n    } else {\n      games[newGame.gameid] = {\n        gameid: newGame.gameid,\n        winner: newGame.winner,\n        points: newGame.points\n      }\n    }\n    this.setState({games:games})\n    ls.set('games', games);\n\n    this.resetNewGame(games.length);\n  }\n\n  handleNewGameChange = (newGame) => {\n    const newGameState = this.state.newGame;\n    if (newGame.winner !== undefined) {\n      newGameState.winner = newGame.winner;\n    } else if (newGame.points !== undefined) {\n      newGameState.points = newGame.points;\n    }\n    this.setState({newGame:newGameState})\n    ls.set('newGame', newGameState);\n  }\n\n  resetNewGame = (newIDX) => {\n    const emptyState = this.emptyState();\n    emptyState.newGame.gameid = newIDX;\n    this.setState({newGame:emptyState.newGame})\n    ls.set('newGame', emptyState.newGame);\n  }\n\n  handleReset = () => {\n    const emptyState = this.emptyState();\n    this.setState(emptyState);\n    ls.set('players', emptyState.players);\n    ls.set('games', emptyState.games);\n    ls.set('newGame', emptyState.newGame);\n  }\n\n  handleGameChange = (idx) => {\n    const game = this.state.games[idx];\n    const newGame = {\n      gameid: idx,\n      winner: [false, false, false, false],\n      points: game.points\n    }\n\n    game.winner.forEach(winnerIDX => {\n      newGame.winner[winnerIDX] = true\n    });\n\n    this.setState({newGame:newGame});\n  }\n\n  render() {\n    const { players, games, newGame } = this.state\n\n    return (\n      <React.Fragment>\n      <NavBar onReset={this.handleReset}/>\n      <Table fixed selectable unstackable columns={5} striped textAlign='center' size='small' style={{borderCollapse: \"collapse\"}}>\n        <TableHeader players={players} onChange={this.handlePlayerChange}/>\n        <GameList games={games} onChange={this.handleGameChange}/>\n        <TableFooter newGame={newGame} onChange={this.handleNewGameChange} onSubmit={this.handleGameAdded}/>\n      </Table>\n      <PageFooter />\n      </React.Fragment>\n      );\n    }\n  }\n  \n  export default App;\n  ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}