{"version":3,"sources":["logo.svg","components/errorCatcher.jsx","components/helpModal.jsx","components/resetPopup.jsx","components/playerPopup.jsx","components/csvPopup.jsx","components/navbar.jsx","components/game.jsx","components/gamelist.jsx","components/tableHeader.jsx","components/tableFooter.jsx","components/pageFooter.jsx","components/scorePlot.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","ErrorCatcher","Component","constructor","props","super","this","state","hasError","componentDidCatch","error","info","setState","render","Header","as","textAlign","content","children","HelpModal","Modal","basic","trigger","centered","closeIcon","Content","Description","ResetPopup","resetPopupOpen","handleClick","onReset","handleOpen","handleClose","Popup","name","hideOnScroll","open","onClose","onOpen","Button","color","onClick","on","position","PlayerPopup","removePlayer","onPlayerDelete","addNewPlayer","onPlayerAdd","Group","compact","icon","downloadCSV","onDownloadCSV","NavBar","handleResetClick","Menu","secondary","Item","src","require","alt","Label","Icon","Game","handleItemClick","gameid","onChange","displayPoints","points","soloPlayed","String","game","cumulativeScore","playerCount","soloWon","soloLost","pointString","rowStyle","borderTop","rowCells","score","map","idx","cellContent","cellPositive","winners","cellNegative","hidden","Table","Cell","key","positive","negative","Row","style","GameList","emptyGame","Array","fill","cumsum2d","array_2d","cumSum","length","slice","forEach","innerArr","arridx","val","validx","games","gamesRender","Body","TableHeader","handleChange","event","players","target","id","value","nameStyle","fontWeight","player","HeaderCell","active","Form","Input","transparent","type","placeholder","playerid","TableFooter","handleFocus","el","currentTarget","setTimeout","select","handleWinnerInput","_","data","checkboxes","newGame","checked","handlePointInput","handlePointSubmit","nullGame","winnerList","checkbox","push","console","warn","onSubmit","checkboxElements","playing","Checkbox","disabled","pointSubmitElement","fluid","size","pattern","max","min","action","onFocus","Footer","fullWidth","PageFooter","Segment","padding","vertical","Container","Divider","section","List","horizontal","divided","link","process","href","colors","ScorePlot","plotLayout","labels","from","v","k","datasets","cumSum2d","Gamelist","prototype","label","borderColor","backgroundColor","lineTension","panels","title","Accordion","defaultActiveIndex","emptyState","App","ls","get","handlePlayerChange","newPlayers","set","handleGameAdded","newGameToGame","resetNewGame","handleNewGameChange","newNewGame","undefined","newIDX","emptyNewGame","setPlaying","sittingOutCount","sittingOutStart","playeridx","handleReset","handleGameChange","gameToChange","headerRow","csvTable","cumScoreRow","row","concat","curDate","Date","downloadStringAsFile","stringify","toISOString","Number","winnerCount","reduce","n","winner","filename","file","Blob","element","document","createElement","URL","createObjectURL","download","body","appendChild","click","Fragment","fixed","selectable","unstackable","columns","striped","borderCollapse","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dbf24083.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.62486c72.svg\";","import React, { Component } from 'react';\nimport { Header } from 'semantic-ui-react';\n\nclass ErrorCatcher extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <Header as='h3' textAlign='center' content=\"Something went wrong - try resetting (top right) + reloading\"/>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorCatcher;\n","import React from 'react';\nimport { Modal} from 'semantic-ui-react';\n\nconst HelpModal = (props) => {\n  return (\n    <Modal basic trigger={props.trigger} centered={false} closeIcon>\n      <Modal.Header>Doko Butler</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          <p>Doko Butler is a little web app that helps you keep track of your Doppelkopf score.</p>\n          <ul>\n            <li>To change a player name, simply click on a name and start typing</li>\n            <li>To add a game, use the bottom row to enter the score and select who won that round</li>\n            <li>To add/remove players, click Players and select Add or Remove. Player count is limited between 4 and 7 and may be changed any time.</li>\n            <li>To edit a previous game, select the corresponding score and click the edit icon. It will populate the bottom row with the game data</li>\n            <li>To reset everything, click the red RESET on the top right and confirm</li>\n            <li>Games with a score of 0 must have no winners, games with a score >0 must have a least one winner</li>\n          </ul>\n          <p>Don't worry if you accidentally reload or close the page - Doko Butler will keep the score.</p>\n        </Modal.Description>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default HelpModal;\n","import React, { Component } from 'react';\nimport { Popup, Button } from 'semantic-ui-react';\n\nclass ResetPopup extends Component {\n  state = { resetPopupOpen: false }\n\n  handleClick = () => {\n    this.setState({ resetPopupOpen: false });\n    this.props.onReset();\n  }\n\n  handleOpen = () => {\n    this.setState({ resetPopupOpen: true });\n  }\n\n  handleClose = () => {\n    this.setState({ resetPopupOpen: false });\n  }\n\n  render() {\n    return (\n      <Popup\n        name='resetPopup'\n        hideOnScroll\n        open={this.state.resetPopupOpen}\n        onClose={this.handleClose}\n        onOpen={this.handleOpen}\n        trigger={this.props.trigger}\n        content={<Button color='red' name='reset' content='Confirm reset' onClick={this.handleClick}/>}\n        on='click'\n        position='bottom right'\n      />\n    );\n  }\n}\n\nexport default ResetPopup;\n","import React, { Component } from 'react';\nimport { Popup, Button } from 'semantic-ui-react';\n\nclass PlayerPopup extends Component {\n\n  removePlayer = () => {this.props.onPlayerDelete();};\n  addNewPlayer = () => {this.props.onPlayerAdd();};\n\n  render() {\n    return (\n      <Popup\n        name='playerPopup'\n        hideOnScroll\n        trigger={this.props.trigger}\n        content={\n          <Button.Group basic compact>\n            <Button icon='remove' color='red' basic compact onClick={this.removePlayer} content=\"Remove\"/>\n            <Button icon='add' color='green' basic compact onClick={this.addNewPlayer}  content=\"Add\"/>\n          </Button.Group>\n        }\n        on='click'\n        position='bottom center'\n      />\n    );\n  }\n}\n\nexport default PlayerPopup;\n","import React, { Component } from 'react';\nimport { Popup, Button } from 'semantic-ui-react';\n\nclass PlayerPopup extends Component {\n  downloadCSV = () => {this.props.onDownloadCSV();};\n\n  render() {\n    return (\n      <Popup\n        name='csvPopup'\n        hideOnScroll\n        trigger={this.props.trigger}\n        content={\n          <Button.Group basic compact>\n            <Button icon='arrow alternate circle down outline' color='green' basic compact onClick={this.downloadCSV}  content=\"Download\"/>\n          </Button.Group>\n        }\n        on='click'\n        position='bottom center'\n      />\n    );\n  }\n}\n\nexport default PlayerPopup;\n","import React, { Component } from 'react';\nimport { Menu, Icon, Label, Header } from 'semantic-ui-react';\nimport HelpModal from './helpModal';\nimport ResetPopup from './resetPopup';\nimport PlayerPopup from './playerPopup';\nimport CsvPopup from './csvPopup';\n\nclass NavBar extends Component {\n  handleResetClick = () => {\n    this.props.onReset();\n  };\n\n  render() {\n    return (\n      <Menu secondary>\n        <Menu.Item content={<img src={require('../logo.svg')} alt='logo'/>}/>\n        <HelpModal trigger={<Menu.Item name='help' content={<Header as='h3' content=\"Doko Butler\"/>}/>}/>\n        <PlayerPopup\n          onPlayerAdd={this.props.onPlayerAdd}\n          onPlayerDelete={this.props.onPlayerDelete}\n          trigger={<Menu.Item content=\"Players\"/>}\n        />\n        <CsvPopup\n          onDownloadCSV={this.props.onDownloadCSV}\n          trigger={<Menu.Item position='left' content=\"CSV\"/>}\n        />\n        <ResetPopup onReset={this.handleResetClick} trigger={\n          <Menu.Item position='right' content={\n            <Label basic color='red'>\n              <Icon name='delete'/> Reset\n            </Label>\n          }/>\n        } />\n      </Menu>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport { Table, Icon, Popup} from 'semantic-ui-react';\n\nclass Game extends Component {\n  handleItemClick = (gameid) => {\n    this.props.onChange(gameid);\n  }\n\n  displayPoints(points, soloPlayed) {\n    return soloPlayed ? `${3 * points} / ${points}` : String(points);\n  }\n\n  render() {\n    const { game, cumulativeScore, playerCount } = this.props;\n    const soloPlayed = game.soloWon || game.soloLost;\n    const pointString = this.displayPoints(game.points, soloPlayed);\n    const rowStyle = { borderTop: game.gameid%playerCount !== 0 ? null : \"solid 2px gray\"};\n    const rowCells = game.score.map((score, idx) => {\n      const cellContent = score === null ? \"-\" : cumulativeScore[idx];\n      const cellPositive = game.winners[idx];\n      const cellNegative = game.winners[idx] === false && game.points !== 0;\n      const hidden = idx >= playerCount;\n      return <Table.Cell content={cellContent} key={idx} positive={cellPositive} negative={cellNegative} hidden={hidden}/>;\n    });\n\n    return (\n      <Table.Row style={rowStyle}>\n        {rowCells}\n        <Popup\n          hideOnScroll\n          trigger={\n            <Table.Cell content={pointString}/>\n          }\n          content={\n            <Icon\n              name='edit outline'\n              onClick={() => this.handleItemClick(game.gameid)}\n            />\n          }\n          on='click'\n          position='top center'\n        />\n      </Table.Row>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from 'react';\nimport Game from './game';\nimport { Table } from 'semantic-ui-react';\n\nclass GameList extends Component {\n  emptyGame(playerCount) {\n    return {\n      gameid: 0,\n      points: Array(playerCount).fill(0),\n      winners: Array(playerCount).fill(false),\n      soloWon: false,\n      soloLost: false,\n    };\n  };\n\n  cumsum2d(array_2d) {\n    const cumSum = Array(array_2d.length).fill(Array(array_2d[0].length));\n    cumSum[0] = array_2d[0];\n    array_2d.slice(1).forEach((innerArr, arridx) => {\n      cumSum[arridx+1] =  innerArr.map((val, validx) => {\n        return val + cumSum[arridx][validx];\n      });\n    });\n    return cumSum;\n  }\n\n  render() {\n    const { games, playerCount, cumulativeScore } = this.props;\n    let gamesRender;\n    if (games.length > 0 && games.length === cumulativeScore.length) {\n      gamesRender = games.map((game, idx) => (\n        <Game\n          key={idx}\n          game={game}\n          playerCount={playerCount}\n          cumulativeScore={cumulativeScore[idx]}\n          onChange={this.props.onChange}\n        />\n      ));\n    }\n\n    return (\n      <Table.Body>{gamesRender}</Table.Body>\n    );\n  }\n}\n\nexport default GameList;\n","import React, { Component } from 'react';\nimport { Table, Form, Input } from 'semantic-ui-react';\n\nclass TableHeader extends Component {\n  handleChange = (event) => {\n    const players = [...this.props.players];\n    players[event.target.id].name = event.target.value;\n    this.props.onChange(players);\n  }\n\n  render() {\n    const nameStyle = {\n      textAlign: \"center\",\n      fontWeight: \"bold\",\n    };\n\n    return (\n      <Table.Header>\n        <Table.Row>\n          {this.props.players.map((player, idx) => (\n            <Table.HeaderCell key={idx} hidden={!player.active}>\n              <Form>\n                <Input transparent type=\"text\" placeholder={`Player ${player.playerid + 1}`} id={player.playerid} value={player.name} onChange={this.handleChange}>\n                  <input style={nameStyle} />\n                </Input>\n              </Form>\n            </Table.HeaderCell>\n          ))}\n          <Table.HeaderCell>{\"Game\"}</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport { Table, Checkbox, Input, Button, Icon } from 'semantic-ui-react';\n\nclass TableFooter extends Component {\n  handleFocus = (event) => {\n    const el = event.currentTarget;\n    setTimeout(() => {\n      el.select();\n    }, 0);\n  }\n\n  handleWinnerInput = (_, data) => {\n    const checkboxes = this.props.newGame.checkboxes.slice();\n    checkboxes[data.playerid].checked = data.checked;\n    this.props.onChange({checkboxes:checkboxes});\n  }\n\n  handlePointInput = (_, data) => {\n    this.props.onChange({points:data.value});\n  }\n\n  handlePointSubmit= (_, data) => {\n    const { points, checkboxes } = this.props.newGame;\n    let nullGame = points === \"0\";\n    let winnerList = [];\n\n    checkboxes.forEach((checkbox, idx) => {\n      if (checkbox.checked) {\n        winnerList.push(idx);\n      }\n    });\n\n    if (nullGame && winnerList.length !== 0) {\n      console.warn(\"Null game must have zero winners.\");\n    } else if (winnerList.length === 0 && !nullGame) {\n      console.warn(\"Zero winners must be nullgame.\");\n    } else if (winnerList.length > 3) {\n      console.warn(\"Can't have more than 3 winners.\");\n    } else {\n      this.props.onSubmit(this.props.newGame);\n    }\n  }\n\n  render() {\n    const { newGame, players } = this.props;\n\n    const checkboxElements = newGame.checkboxes.map((checkbox, idx) => (\n      <Table.HeaderCell key={idx} hidden={!players[idx].active}>\n        {players[idx].playing\n          ? <Checkbox\n            playerid={idx}\n            checked={checkbox.checked}\n            disabled={!players[idx].playing}\n            onChange={this.handleWinnerInput}/>\n          : <Icon name='x' />}\n      </Table.HeaderCell>\n    ));\n\n    const pointSubmitElement =\n      <Table.HeaderCell>\n        <Input fluid\n          size='mini'\n          type='number'\n          pattern=\"\\d*\"\n          max={50}\n          min={0}\n          action={ <Button compact color='teal' icon='add' size='mini' onClick={ this.handlePointSubmit } />}\n          onFocus={this.handleFocus}\n          onChange={this.handlePointInput}\n          value={newGame.points}\n          placeholder='Points'/>\n      </Table.HeaderCell>;\n\n    return (\n      <Table.Footer fullWidth>\n        <Table.Row>\n          {checkboxElements}\n          {pointSubmitElement}\n        </Table.Row>\n      </Table.Footer>\n    );\n  }\n}\n\nexport default TableFooter;\n","import React from 'react';\nimport { Segment, Container, List, Divider, Icon } from 'semantic-ui-react';\n\nconst PageFooter = () => {\n  return (\n    <Segment style={{ padding: '0em 0em 5em 0em' }} vertical>\n      <Container textAlign='center'>\n        <Divider section />\n        <List horizontal divided link size='small'>\n          <List.Item content={`${process.env.REACT_APP_NAME} ${process.env.REACT_APP_VERSION}`}/>\n          <List.Item as='a' href='https://github.com/chohner/doko-butler' target=\"_blank\">\n            <Icon name='github'/> github\n          </List.Item>\n          <List.Item as='a' href='https://chohner.com' target=\"_blank\" content={\"made by chohner\"}/>\n        </List>\n      </Container>\n    </Segment>\n  );\n};\n\nexport default PageFooter;\n","import React, { Component } from 'react';\nimport { Accordion } from 'semantic-ui-react';\nimport { Line } from 'react-chartjs-2';\nimport Gamelist from './gamelist';\n\nconst colors = [\n  'rgba(22, 70, 112,1)',\n  'rgba(145, 80, 150,1)',\n  'rgba(245, 89, 110,1)',\n  'rgba(255, 166, 0,1)',\n];\n\nclass ScorePlot extends Component {\n  render() {\n    const {players, playerCount, games} = this.props;\n\n    if (games.length > 0) {\n      const plotLayout = {\n        labels: Array.from({length: games.length}, (v, k) => k+1),\n        datasets: [],\n      };\n\n      const cumSum2d = Gamelist.prototype.cumsum2d(games.map(game => game.score));\n\n      for (let idx = 0; idx < playerCount; idx++) {\n        plotLayout.datasets.push({\n          label: players[idx].name,\n          fill: false,\n          borderColor: colors[idx],\n          backgroundColor: colors[idx],\n          lineTension: 0.2,\n          data: cumSum2d.map(game => game[idx]),\n        });\n      }\n\n      const panels = [\n        {\n          key: 'plot',\n          title: 'Progress plot',\n          content: {content: (<Line data={plotLayout} />)},\n        },\n      ];\n\n      return (\n        <Accordion defaultActiveIndex={-1} panels={panels} />\n      );\n    } else {\n      return (null);\n    }\n  }\n}\n\nexport default ScorePlot;\n","import React, { Component } from 'react';\nimport './App.css';\nimport ErrorCatcher from './components/errorCatcher';\nimport NavBar from './components/navbar';\nimport GameList from './components/gamelist';\nimport Game from './components/game';\nimport TableHeader from './components/tableHeader';\nimport TableFooter from './components/tableFooter';\nimport PageFooter from './components/pageFooter';\nimport ScorePlot from './components/scorePlot';\nimport { Table } from 'semantic-ui-react';\nimport ls from 'local-storage';\nimport stringify from 'csv-stringify/lib/sync';\n\nfunction emptyState() {\n  return {\n    players: [\n      {playerid: 0, name: \"Player 1\", playing: true, active:true},\n      {playerid: 1, name: \"Player 2\", playing: true, active:true},\n      {playerid: 2, name: \"Player 3\", playing: true, active:true},\n      {playerid: 3, name: \"Player 4\", playing: true, active:true},\n      {playerid: 4, name: \"Player 5\", playing: false, active:false},\n      {playerid: 5, name: \"Player 6\", playing: false, active:false},\n      {playerid: 6, name: \"Player 7\", playing: false, active:false},\n    ],\n    playerCount: 4,\n    games: [],\n    cumulativeScore: [],\n    newGame: {\n      gameid: 0,\n      checkboxes: [\n        {playerid: 0, checked: false},\n        {playerid: 1, checked: false},\n        {playerid: 2, checked: false},\n        {playerid: 3, checked: false},\n        {playerid: 4, checked: false},\n        {playerid: 5, checked: false},\n        {playerid: 6, checked: false},\n      ],\n      points: '',\n    },\n  };\n};\n\nclass App extends Component {\n  state = {\n    players: ls.get('players') || emptyState().players,\n    games: ls.get('games') || emptyState().games,\n    cumulativeScore: ls.get('cumulativeScore') || emptyState().cumulativeScore,\n    newGame: ls.get('newGame') || emptyState().newGame,\n    playerCount: ls.get('playerCount') || emptyState().playerCount,\n  }\n  emptyState = emptyState;\n\n  handlePlayerChange = (newPlayers) => {\n    this.setState({players:newPlayers});\n    ls.set('players', newPlayers);\n  }\n\n  newGameToGame(newGame) {\n    const { players } = this.state;\n    const points = Number(newGame.points);\n    const winners = newGame.checkboxes.map((checkbox, idx) => {\n      return players[idx].active && players[idx].playing ? checkbox.checked : null;\n    });\n    const winnerCount = winners.reduce((n, val) => n + (val === true));\n    const soloWon = winnerCount === 1;\n    const soloLost = winnerCount === 3;\n\n\n    const score = winners.map(winner => {\n      return winner === null ?\n        null\n        : winner ?\n          soloWon ? 3 * points : points\n          : soloLost ? -3 * points : -points;\n    });\n\n    return {\n      gameid: newGame.gameid,\n      score,\n      points,\n      winners,\n      soloWon,\n      soloLost,\n    };\n  }\n\n  handleGameAdded = (newGame) => {\n    const { games } = this.state;\n    const game = this.newGameToGame(newGame);\n    games[game.gameid] = game;\n\n    const cumulativeScore = GameList.prototype.cumsum2d(games.map(game => game.score));\n    this.setState({cumulativeScore:cumulativeScore});\n    ls.set('cumulativeScore', cumulativeScore);\n\n    this.setState({games:games});\n    ls.set('games', games);\n\n    this.resetNewGame(games.length);\n  }\n\n  handleNewGameChange = (newNewGame) => {\n    const { newGame } = this.state;\n    if (newNewGame.checkboxes !== undefined) {\n      newGame.checkboxes = newNewGame.checkboxes;\n    }\n    if (newNewGame.points !== undefined) {\n      newGame.points = newNewGame.points;\n    }\n    this.setState({newGame:newGame});\n    ls.set('newGame', newGame);\n  }\n\n  resetNewGame = (newIDX) => {\n    const { playerCount } = this.state;\n    const emptyNewGame  = this.emptyState()['newGame'];\n    emptyNewGame.gameid = newIDX;\n    this.setPlaying(playerCount, emptyNewGame.gameid);\n    this.setState({newGame:emptyNewGame});\n    ls.set('newGame', emptyNewGame);\n  }\n\n  setPlaying = (playerCount, gameid) => {\n    const { players } = this.state;\n    const playing = Array(playerCount).fill(true);\n\n    const sittingOutCount = playerCount - 4;\n    const sittingOutStart = gameid % playerCount;\n\n    for (let playeridx = sittingOutStart; playeridx < sittingOutStart+sittingOutCount; playeridx++) {\n      playing[playeridx%playerCount] = false;\n    }\n    players.forEach((player, idx) => {\n      player.playing = playing[idx];\n    });\n  }\n\n  handleReset = () => {\n    const emptyState = this.emptyState();\n    this.setState(emptyState);\n    ls.set('players', emptyState.players);\n    ls.set('playerCount', emptyState.playerCount);\n    ls.set('games', emptyState.games);\n    ls.set('newGame', emptyState.newGame);\n    ls.set('cumulativeScore', emptyState.cumulativeScore);\n  }\n\n  handleGameChange = (idx) => {\n    const { games, playerCount } = this.state;\n    const game = games[idx];\n    const { newGame } = this.emptyState();\n    newGame.checkboxes.forEach((checkbox, idx) => {\n      checkbox.checked = game.winners[idx];\n    });\n\n    newGame.points = game.points;\n    newGame.gameid = game.gameid;\n    this.setPlaying(playerCount, newGame.gameid);\n    this.setState({newGame:newGame});\n  }\n\n  addNewPlayer = () => {\n    let { games, players, playerCount } = this.state;\n    if (playerCount < 7) {\n      players[playerCount].active = true;\n      playerCount++;\n      this.setPlaying(playerCount, games.length);\n      this.setState({playerCount: playerCount});\n      this.setState({players: players});\n      ls.set('players', players);\n      ls.set('playerCount', playerCount);\n      ls.set('playerCount', playerCount);\n    }\n  }\n\n  removePlayer = () => {\n    let { players, playerCount, games } = this.state;\n    if (playerCount > 4) {\n      playerCount--;\n      const gameToChange = games.length === 0 ? games.length : games[games.length-1].gameid;\n      this.setPlaying(playerCount, gameToChange);\n      players[playerCount].active = false;\n      this.setState({players: players});\n      this.setState({playerCount: playerCount});\n      ls.set('players', players);\n      ls.set('playerCount', playerCount);\n    }\n  }\n\n  downloadStringAsFile(content, filename) {\n    const file = new Blob([content], {type: 'text/plain'});\n    const element = document.createElement(\"a\");\n    element.href = URL.createObjectURL(file);\n    element.download = filename;\n    document.body.appendChild(element);\n    element.click();\n  }\n\n  downloadCSV = () => {\n    let { players, playerCount, cumulativeScore, games } = this.state;\n    const headerRow = [\"#\"];\n    for (let idx = 0; idx < playerCount; idx++) {\n      headerRow.push(players[idx].name);\n    }\n    headerRow.push(\"game\");\n    const csvTable = [headerRow];\n    cumulativeScore.forEach((cumScoreRow, idx) => {\n      const game = games[idx];\n      let row = [game.gameid];\n      row = row.concat(cumScoreRow.slice(0, playerCount));\n      row.push(Game.prototype.displayPoints(game.points, game.soloWon || game.soloLost));\n      csvTable.push(row);\n    });\n    const curDate = new Date();\n    this.downloadStringAsFile(stringify(csvTable), `doko_game_${curDate.toISOString()}.csv`);\n  }\n\n  render() {\n    let { players, games, newGame, playerCount, cumulativeScore } = this.state;\n    return (\n      <React.Fragment>\n        <NavBar onReset={this.handleReset} onPlayerAdd={this.addNewPlayer} onPlayerDelete={this.removePlayer} onDownloadCSV={this.downloadCSV}/>\n        <ErrorCatcher>\n          <Table fixed selectable unstackable columns={5} striped textAlign='center' size='small' style={{borderCollapse: \"collapse\"}}>\n            <TableHeader players={players} onChange={this.handlePlayerChange}/>\n            <GameList cumulativeScore={cumulativeScore} games={games} playerCount={playerCount} onChange={this.handleGameChange}/>\n            <TableFooter players={players} newGame={newGame} onChange={this.handleNewGameChange} onSubmit={this.handleGameAdded}/>\n          </Table>\n        </ErrorCatcher>\n        <ScorePlot players={players} games={games} playerCount={playerCount}/>\n        <PageFooter />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}