{"version":3,"sources":["logo.svg","components/helpModal.jsx","components/resetPopup.jsx","components/playerPopup.jsx","components/navbar.jsx","components/game.jsx","components/gamelist.jsx","components/tableHeader.jsx","components/tableFooter.jsx","components/pageFooter.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","HelpModal","props","react_default","a","createElement","Modal","basic","trigger","centered","Header","Content","Description","ResetPopup","state","resetPopupOpen","handleClick","_this","setState","onReset","handleOpen","handleClose","Popup","name","hideOnScroll","open","this","onClose","onOpen","content","Button","color","onClick","on","Component","PlayerPopup","removePlayer","onPlayerDelete","addNewPlayer","onPlayerAdd","Group","compact","icon","NavBar","handleResetClick","Menu","secondary","Item","src","require","alt","as","helpModal","playerPopup","position","resetPopup","Label","Icon","Game","handleItemClick","gameid","onChange","_this2","_this$props","game","cumulativeScore","playerCount","pointString","soloWon","soloLost","concat","points","rowStyle","borderTop","rowCells","score","map","idx","cellContent","cellPositive","winners","cellNegative","hidden","Table","Cell","key","positive","negative","Row","style","GameList","Array","fill","array_2d","cumSum","length","slice","forEach","innerArr","arridx","val","validx","gamesRender","games","scores","cumsum2d","components_game","Body","TableHeader","handleChange","event","players","Object","toConsumableArray","target","id","value","nameStyle","textAlign","fontWeight","player","HeaderCell","active","Form","Input","transparent","type","placeholder","TableFooter","handleFocus","el","currentTarget","setTimeout","select","handleWinnerInput","_","data","checkboxes","newGame","playerid","checked","handlePointInput","handlePointSubmit","_this$props$newGame","nullGame","winnerList","checkbox","push","console","warn","onSubmit","checkboxElements","playing","Checkbox","disabled","pointSubmitElement","fluid","size","pattern","max","min","action","onFocus","Footer","fullWidth","PageFooter","Segment","margin","padding","vertical","Container","Divider","section","List","horizontal","divided","link","process","href","emptyState","App","ls","get","handlePlayerChange","newPlayers","set","handleGameAdded","newGameToGame","resetNewGame","handleNewGameChange","newNewGame","undefined","newIDX","emptyNewGame","setPlaying","sittingOutCount","sittingOutStart","playeridx","handleReset","handleGameChange","_this$state","_this$state2","_this$state3","Number","winnerCount","reduce","n","winner","_this$state4","Fragment","navbar","fixed","selectable","unstackable","columns","striped","borderCollapse","tableHeader","gamelist","tableFooter","pageFooter","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f18b3233.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.62486c72.svg\";","import React from 'react';\nimport { Modal} from 'semantic-ui-react';\n\nconst HelpModal = (props) => {\n  return (\n    <Modal basic trigger={props.trigger} centered={false}>\n      <Modal.Header>Help</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          <p>You can add a game by entering the game score and winners. Solos points are calculated automatically.</p>\n          <p>You can edit a previous game by clicking on the corresponding score and hitting the edit icon. It will populate the bottom row, adding the game will edit in place.</p>\n          <p>You can edit player names by clicking on them.</p>\n        </Modal.Description>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default HelpModal;\n","import React, { Component } from 'react';\nimport { Popup, Button } from 'semantic-ui-react';\n\nclass ResetPopup extends Component {\n  state = { resetPopupOpen: false }\n\n  handleClick = () => {\n    this.setState({ resetPopupOpen: false });\n    this.props.onReset();\n  }\n\n  handleOpen = () => {\n    this.setState({ resetPopupOpen: true });\n  }\n\n  handleClose = () => {\n    this.setState({ resetPopupOpen: false });\n  }\n\n  render() {\n    return (\n      <Popup\n        name='resetPopup'\n        hideOnScroll\n        open={this.state.resetPopupOpen}\n        onClose={this.handleClose}\n        onOpen={this.handleOpen}\n        trigger={this.props.trigger}\n        content={<Button color='red' name='reset' content='Confirm reset' onClick={this.handleClick}/>}\n        on='click'\n      />\n    );\n  }\n}\n\nexport default ResetPopup;\n","import React, { Component } from 'react';\nimport { Popup, Button } from 'semantic-ui-react';\n\nclass PlayerPopup extends Component {\n\n  removePlayer = () => {this.props.onPlayerDelete();};\n  addNewPlayer = () => {this.props.onPlayerAdd();};\n\n  render() {\n    return (\n      <Popup\n        name='resetPopup'\n        hideOnScroll\n        trigger={this.props.trigger}\n        content={\n          <Button.Group basic compact>\n            <Button icon='remove' color='red' basic compact onClick={this.removePlayer} content=\"Remove\"/>\n            <Button icon='add' color='green' basic compact onClick={this.addNewPlayer}  content=\"Add\"/>\n          </Button.Group>\n        }\n        on='click'\n      />\n    );\n  }\n}\n\nexport default PlayerPopup;\n","import React, { Component } from 'react';\nimport { Menu, Icon, Label, Header } from 'semantic-ui-react';\nimport HelpModal from './helpModal';\nimport ResetPopup from './resetPopup';\nimport PlayerPopup from './playerPopup';\n\nclass NavBar extends Component {\n  handleResetClick = () => {\n    this.props.onReset();\n  };\n\n  render() {\n    return (\n      <Menu secondary>\n        <Menu.Item content={<img src={require('../logo.svg')} alt='logo'/>}/>\n        <Menu.Item content={<Header as='h3' content=\"Doko Butler\"/>}/>\n        <HelpModal trigger={<Menu.Item name='help' content='Help'/>}/>\n        <PlayerPopup\n          onPlayerAdd={this.props.onPlayerAdd}\n          onPlayerDelete={this.props.onPlayerDelete}\n          trigger={<Menu.Item position='right' content=\"Players\"/>}\n        />\n        <ResetPopup onReset={this.handleResetClick} trigger={\n          <Menu.Item position='right' content={\n            <Label basic color='red'>\n              <Icon name='delete'/> Reset\n            </Label>\n          }/>\n        } />\n      </Menu>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport { Table, Icon, Popup} from 'semantic-ui-react';\n\nclass Game extends Component {\n  handleItemClick = (gameid) => {\n    this.props.onChange(gameid);\n  }\n\n  render() {\n    const { game, cumulativeScore, playerCount } = this.props;\n    const soloPlayed = game.soloWon || game.soloLost;\n    const pointString = soloPlayed ? `${3 * game.points} / ${game.points}` : game.points;\n    const rowStyle = { borderTop: game.gameid%playerCount !== 0 ? null : \"solid 2px gray\"};\n    const rowCells = game.score.map((score, idx) => {\n      const cellContent = score === null ? \"-\" : cumulativeScore[idx];\n      const cellPositive = game.winners[idx];\n      const cellNegative = game.winners[idx] === false && game.points !== 0;\n      const hidden = idx >= playerCount;\n      return <Table.Cell content={cellContent} key={idx} positive={cellPositive} negative={cellNegative} hidden={hidden}/>;\n    });\n\n    return (\n      <Table.Row style={rowStyle}>\n        {rowCells}\n        <Popup\n          hideOnScroll\n          trigger={\n            <Table.Cell content={pointString}/>\n          }\n          content={\n            <Icon\n              name='edit outline'\n              onClick={() => this.handleItemClick(game.gameid)}\n            />\n          }\n          on='click'\n          position='top center'\n        />\n      </Table.Row>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from 'react';\nimport Game from './game';\nimport { Table } from 'semantic-ui-react';\n\nclass GameList extends Component {\n  emptyGame(playerCount) {\n    return {\n      gameid: 0,\n      points: Array(playerCount).fill(0),\n      winners: Array(playerCount).fill(false),\n      soloWon: false,\n      soloLost: false,\n    };\n  };\n\n  cumsum2d(array_2d) {\n    const cumSum = Array(array_2d.length).fill(Array(array_2d[0].length));\n    cumSum[0] = array_2d[0];\n    array_2d.slice(1).forEach((innerArr, arridx) => {\n      cumSum[arridx+1] =  innerArr.map((val, validx) => {\n        return val + cumSum[arridx][validx];\n      });\n    });\n    return cumSum;\n  }\n\n  render() {\n    const { games, playerCount } = this.props;\n    let gamesRender;\n    if (games.length > 0) {\n      const scores = games.map(game => game.score);\n      const cumulativeScore = this.cumsum2d(scores);\n      gamesRender = games.map((game, idx) => (\n        <Game\n          key={idx}\n          game={game}\n          playerCount={playerCount}\n          cumulativeScore={cumulativeScore[idx]}\n          onChange={this.props.onChange}\n        />\n      ));\n    }\n\n    return (\n      <Table.Body>{gamesRender}</Table.Body>\n    );\n  }\n}\n\nexport default GameList;\n","import React, { Component } from 'react';\nimport { Table, Form, Input } from 'semantic-ui-react';\n\nclass TableHeader extends Component {\n  handleChange = (event) => {\n    const players = [...this.props.players];\n    players[event.target.id].name = event.target.value;\n    this.props.onChange(players);\n  }\n\n  render() {\n    const nameStyle = {\n      textAlign: \"center\",\n      fontWeight: \"bold\",\n    };\n\n    return (\n      <Table.Header>\n        <Table.Row>\n          {this.props.players.map((player, idx) => (\n            <Table.HeaderCell key={idx} hidden={!player.active}>\n              <Form>\n                <Input transparent type=\"text\" placeholder={`Player ${player.id}`} id={player.id} value={player.name} onChange={this.handleChange}>\n                  <input style={nameStyle} />\n                </Input>\n              </Form>\n            </Table.HeaderCell>\n          ))}\n          <Table.HeaderCell>{\"Game\"}</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport { Table, Checkbox, Input, Button, Icon } from 'semantic-ui-react';\n\nclass TableFooter extends Component {\n  handleFocus = (event) => {\n    const el = event.currentTarget;\n    setTimeout(() => {\n      el.select();\n    }, 0);\n  }\n\n  handleWinnerInput = (_, data) => {\n    const checkboxes = this.props.newGame.checkboxes.slice();\n    checkboxes[data.playerid].checked = data.checked;\n    this.props.onChange({checkboxes:checkboxes});\n  }\n\n  handlePointInput = (_, data) => {\n    this.props.onChange({points:data.value});\n  }\n\n  handlePointSubmit= (_, data) => {\n    const { points, checkboxes } = this.props.newGame;\n    let nullGame = points === \"0\";\n    let winnerList = [];\n\n    checkboxes.forEach((checkbox, idx) => {\n      if (checkbox.checked) {\n        winnerList.push(idx);\n      }\n    });\n\n    if (nullGame && winnerList.length !== 0) {\n      console.warn(\"Null game must have zero winners.\");\n    } else if (winnerList.length === 0 && !nullGame) {\n      console.warn(\"Zero winners must be nullgame.\");\n    } else if (winnerList.length > 3) {\n      console.warn(\"Can't have more than 3 winners.\");\n    } else {\n      this.props.onSubmit(this.props.newGame);\n    }\n  }\n\n  render() {\n    const { newGame, players } = this.props;\n\n    const checkboxElements = newGame.checkboxes.map((checkbox, idx) => (\n      <Table.HeaderCell key={idx} hidden={!players[idx].active}>\n        {players[idx].playing\n          ? <Checkbox\n            playerid={idx}\n            checked={checkbox.checked}\n            disabled={!players[idx].playing}\n            onChange={this.handleWinnerInput}/>\n          : <Icon name='x' />}\n      </Table.HeaderCell>\n    ));\n\n    const pointSubmitElement =\n      <Table.HeaderCell>\n        <Input fluid\n          size='mini'\n          type='number'\n          pattern=\"\\d*\"\n          max={50}\n          min={0}\n          action={ <Button compact color='teal' icon='add' size='mini' onClick={ this.handlePointSubmit } />}\n          onFocus={this.handleFocus}\n          onChange={this.handlePointInput}\n          value={newGame.points}\n          placeholder='Points'/>\n      </Table.HeaderCell>;\n\n    return (\n      <Table.Footer fullWidth>\n        <Table.Row>\n          {checkboxElements}\n          {pointSubmitElement}\n        </Table.Row>\n      </Table.Footer>\n    );\n  }\n}\n\nexport default TableFooter;\n","import React from 'react';\nimport { Segment, Container, List, Divider, Icon } from 'semantic-ui-react';\n\nconst PageFooter = () => {\n  return (\n    <Segment style={{ margin: '5em 0em 0em', padding: '5em 0em' }} vertical>\n      <Container textAlign='center'>\n        <Divider section />\n        <List horizontal divided link size='small'>\n          <List.Item content={`${process.env.REACT_APP_NAME} ${process.env.REACT_APP_VERSION}`}/>\n          <List.Item as='a' href='https://github.com/chohner/doko-butler' target=\"_blank\">\n            <Icon name='github'/> github\n          </List.Item>\n          <List.Item as='a' href='https://chohner.com' target=\"_blank\" content={\"made by chohner\"}/>\n        </List>\n      </Container>\n    </Segment>\n  );\n};\n\nexport default PageFooter;\n","import React, { Component } from 'react';\nimport './App.css';\nimport NavBar from './components/navbar';\nimport GameList from './components/gamelist';\nimport TableHeader from './components/tableHeader';\nimport TableFooter from './components/tableFooter';\nimport PageFooter from './components/pageFooter';\nimport { Table } from 'semantic-ui-react';\nimport ls from 'local-storage';\n\nfunction emptyState() {\n  return {\n    players: [\n      {playerid: 0, name: \"Player 1\", playing: true, active:true},\n      {playerid: 1, name: \"Player 2\", playing: true, active:true},\n      {playerid: 2, name: \"Player 3\", playing: true, active:true},\n      {playerid: 3, name: \"Player 4\", playing: true, active:true},\n      {playerid: 4, name: \"Player 5\", playing: false, active:false},\n      {playerid: 5, name: \"Player 6\", playing: false, active:false},\n      {playerid: 6, name: \"Player 7\", playing: false, active:false},\n      {playerid: 7, name: \"Player 8\", playing: false, active:false},\n    ],\n    playerCount: 4,\n    games: [],\n    newGame: {\n      gameid: 0,\n      checkboxes: [\n        {playerid: 0, checked: false},\n        {playerid: 1, checked: false},\n        {playerid: 2, checked: false},\n        {playerid: 3, checked: false},\n        {playerid: 4, checked: false},\n        {playerid: 5, checked: false},\n        {playerid: 6, checked: false},\n        {playerid: 7, checked: false},\n      ],\n      points: '',\n    },\n  };\n};\n\nclass App extends Component {\n  state = {\n    players: ls.get('players') || emptyState().players,\n    games: ls.get('games') || emptyState().games,\n    newGame: ls.get('newGame') || emptyState().newGame,\n    playerCount: ls.get('playerCount') || emptyState().playerCount,\n  }\n  emptyState = emptyState;\n\n  handlePlayerChange = (newPlayers) => {\n    this.setState({players:newPlayers});\n    ls.set('players', newPlayers);\n  }\n\n  newGameToGame(newGame) {\n    const { players } = this.state;\n    const points = Number(newGame.points);\n    const winners = newGame.checkboxes.map((checkbox, idx) => {\n      return players[idx].active && players[idx].playing ? checkbox.checked : null;\n    });\n    const winnerCount = winners.reduce((n, val) => n + (val === true));\n    const soloWon = winnerCount === 1;\n    const soloLost = winnerCount === 3;\n\n\n    const score = winners.map(winner => {\n      return winner === null ?\n        null\n        : winner ?\n          soloWon ? 3 * points : points\n          : soloLost ? -3 * points : -points;\n    });\n\n    return {\n      gameid: newGame.gameid,\n      score,\n      points,\n      winners,\n      soloWon,\n      soloLost,\n    };\n  }\n\n  handleGameAdded = (newGame) => {\n    const { games } = this.state;\n    const game = this.newGameToGame(newGame);\n    games[game.gameid] = game;\n\n    this.setState({games:games});\n    ls.set('games', games);\n\n    this.resetNewGame(games.length);\n  }\n\n  handleNewGameChange = (newNewGame) => {\n    const { newGame } = this.state;\n    if (newNewGame.checkboxes !== undefined) {\n      newGame.checkboxes = newNewGame.checkboxes;\n    }\n    if (newNewGame.points !== undefined) {\n      newGame.points = newNewGame.points;\n    }\n    this.setState({newGame:newGame});\n    ls.set('newGame', newGame);\n  }\n\n  resetNewGame = (newIDX) => {\n    const { playerCount } = this.state;\n    const emptyNewGame  = this.emptyState()['newGame'];\n    emptyNewGame.gameid = newIDX;\n    this.setPlaying(playerCount, emptyNewGame.gameid);\n    this.setState({newGame:emptyNewGame});\n    ls.set('newGame', emptyNewGame);\n  }\n\n  setPlaying = (playerCount, gameid) => {\n    const { players } = this.state;\n    const playing = Array(playerCount).fill(true);\n\n    const sittingOutCount = playerCount - 4;\n    const sittingOutStart = gameid % playerCount;\n\n    for (let playeridx = sittingOutStart; playeridx < sittingOutStart+sittingOutCount; playeridx++) {\n      playing[playeridx%playerCount] = false;\n    }\n    players.forEach((player, idx) => {\n      player.playing = playing[idx];\n    });\n  }\n\n  handleReset = () => {\n    const emptyState = this.emptyState();\n    this.setState(emptyState);\n    ls.set('players', emptyState.players);\n    ls.set('playerCount', emptyState.playerCount);\n    ls.set('games', emptyState.games);\n    ls.set('newGame', emptyState.newGame);\n  }\n\n  handleGameChange = (idx) => {\n    const { games, playerCount } = this.state;\n    const game = games[idx];\n    const { newGame } = this.emptyState();\n    newGame.checkboxes.forEach((checkbox, idx) => {\n      checkbox.checked = game.winners[idx];\n    });\n\n    newGame.points = game.points;\n    newGame.gameid = game.gameid;\n    this.setPlaying(playerCount, newGame.gameid);\n    this.setState({newGame:newGame});\n  }\n\n  addNewPlayer = () => {\n    let { games, players, playerCount } = this.state;\n    if (playerCount < 8) {\n      players[playerCount].active = true;\n      playerCount++;\n      this.setPlaying(playerCount, games.length);\n      this.setState({playerCount: playerCount});\n      this.setState({players: players});\n      ls.set('players', players);\n      ls.set('playerCount', playerCount);\n      ls.set('playerCount', playerCount);\n    }\n  }\n\n  removePlayer = () => {\n    let { players, playerCount, games } = this.state;\n    if (playerCount > 4) {\n      playerCount--;\n      this.setPlaying(playerCount, games[games.length-1].gameid);\n      players[playerCount].active = false;\n      this.setState({players: players});\n      this.setState({playerCount: playerCount});\n      ls.set('players', players);\n      ls.set('playerCount', playerCount);\n    }\n  }\n\n  render() {\n    const { players, games, newGame, playerCount } = this.state;\n\n    return (\n      <React.Fragment>\n        <NavBar onReset={this.handleReset} onPlayerAdd={this.addNewPlayer} onPlayerDelete={this.removePlayer}/>\n        <Table fixed selectable unstackable columns={5} striped textAlign='center' size='small' style={{borderCollapse: \"collapse\"}}>\n          <TableHeader players={players} onChange={this.handlePlayerChange}/>\n          <GameList games={games} playerCount={playerCount} onChange={this.handleGameChange}/>\n          <TableFooter players={players} newGame={newGame} onChange={this.handleNewGameChange} onSubmit={this.handleGameAdded}/>\n        </Table>\n        <PageFooter />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}